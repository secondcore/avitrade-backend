

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class CreditCard : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the CreditCard entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CreditCard()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CreditCard(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CreditCard> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.CreditCard.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreditCard_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreditCard_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.CreditCard.DetailsClass.GetValue(this, global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.Id);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string HolderName
        {
            get
            {
                return global::LightSwitchApplication.CreditCard.DetailsClass.GetValue(this, global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.HolderName);
            }
            set
            {
                global::LightSwitchApplication.CreditCard.DetailsClass.SetValue(this, global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.HolderName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HolderName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HolderName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HolderName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CardNumber
        {
            get
            {
                return global::LightSwitchApplication.CreditCard.DetailsClass.GetValue(this, global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.CardNumber);
            }
            set
            {
                global::LightSwitchApplication.CreditCard.DetailsClass.SetValue(this, global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.CardNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ExpDate
        {
            get
            {
                return global::LightSwitchApplication.CreditCard.DetailsClass.GetValue(this, global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.ExpDate);
            }
            set
            {
                global::LightSwitchApplication.CreditCard.DetailsClass.SetValue(this, global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.ExpDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExpDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SecurityCode
        {
            get
            {
                return global::LightSwitchApplication.CreditCard.DetailsClass.GetValue(this, global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.SecurityCode);
            }
            set
            {
                global::LightSwitchApplication.CreditCard.DetailsClass.SetValue(this, global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.SecurityCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SecurityCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SecurityCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SecurityCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.CreditCard.DetailsClass.GetValue(this, global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.RowVersion);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Trader Trader
        {
            get
            {
                return global::LightSwitchApplication.CreditCard.DetailsClass.GetValue(this, global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.Trader);
            }
            set
            {
                global::LightSwitchApplication.CreditCard.DetailsClass.SetValue(this, global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.Trader, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Trader_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Trader_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Trader_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.CreditCard,
                global::LightSwitchApplication.CreditCard.DetailsClass,
                global::LightSwitchApplication.CreditCard.DetailsClass.IImplementation,
                global::LightSwitchApplication.CreditCard.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass>.Entry
                __CreditCardEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass>.Entry(
                    global::LightSwitchApplication.CreditCard.DetailsClass.__CreditCard_CreateNew,
                    global::LightSwitchApplication.CreditCard.DetailsClass.__CreditCard_Created,
                    global::LightSwitchApplication.CreditCard.DetailsClass.__CreditCard_AllowSaveWithErrors);
            private static global::LightSwitchApplication.CreditCard __CreditCard_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CreditCard> es)
            {
                return new global::LightSwitchApplication.CreditCard(es);
            }
            private static void __CreditCard_Created(global::LightSwitchApplication.CreditCard e)
            {
                e.CreditCard_Created();
            }
            private static bool __CreditCard_AllowSaveWithErrors(global::LightSwitchApplication.CreditCard e)
            {
                bool result = false;
                e.CreditCard_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.CreditCard.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string> HolderName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.HolderName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string> CardNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.CardNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string> ExpDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.ExpDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string> SecurityCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.SecurityCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, global::LightSwitchApplication.Trader> Trader
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.Trader) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, global::LightSwitchApplication.Trader>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; }
                new string HolderName { get; set; }
                new string CardNumber { get; set; }
                new string ExpDate { get; set; }
                new string SecurityCode { get; set; }
                new byte[] RowVersion { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Trader { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreditCard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, int>.Data> c, global::LightSwitchApplication.CreditCard.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.CreditCard e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.CreditCard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.CreditCard.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.CreditCard e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Entry
                    HolderName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Entry(
                        "HolderName",
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._HolderName_Stub,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._HolderName_ComputeIsReadOnly,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._HolderName_Validate,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._HolderName_GetImplementationValue,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._HolderName_SetImplementationValue,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._HolderName_OnValueChanged);
                private static void _HolderName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreditCard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Data> c, global::LightSwitchApplication.CreditCard.DetailsClass d, object sf)
                {
                    c(d, ref d._HolderName, sf);
                }
                private static bool _HolderName_ComputeIsReadOnly(global::LightSwitchApplication.CreditCard e)
                {
                    bool result = false;
                    e.HolderName_IsReadOnly(ref result);
                    return result;
                }
                private static void _HolderName_Validate(global::LightSwitchApplication.CreditCard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.HolderName_Validate(r);
                }
                private static string _HolderName_GetImplementationValue(global::LightSwitchApplication.CreditCard.DetailsClass d)
                {
                    return d.ImplementationEntity.HolderName;
                }
                private static void _HolderName_SetImplementationValue(global::LightSwitchApplication.CreditCard.DetailsClass d, string v)
                {
                    d.ImplementationEntity.HolderName = v;
                }
                private static void _HolderName_OnValueChanged(global::LightSwitchApplication.CreditCard e)
                {
                    e.HolderName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Entry
                    CardNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Entry(
                        "CardNumber",
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._CardNumber_Stub,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._CardNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._CardNumber_Validate,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._CardNumber_GetImplementationValue,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._CardNumber_SetImplementationValue,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._CardNumber_OnValueChanged);
                private static void _CardNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreditCard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Data> c, global::LightSwitchApplication.CreditCard.DetailsClass d, object sf)
                {
                    c(d, ref d._CardNumber, sf);
                }
                private static bool _CardNumber_ComputeIsReadOnly(global::LightSwitchApplication.CreditCard e)
                {
                    bool result = false;
                    e.CardNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _CardNumber_Validate(global::LightSwitchApplication.CreditCard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CardNumber_Validate(r);
                }
                private static string _CardNumber_GetImplementationValue(global::LightSwitchApplication.CreditCard.DetailsClass d)
                {
                    return d.ImplementationEntity.CardNumber;
                }
                private static void _CardNumber_SetImplementationValue(global::LightSwitchApplication.CreditCard.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CardNumber = v;
                }
                private static void _CardNumber_OnValueChanged(global::LightSwitchApplication.CreditCard e)
                {
                    e.CardNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Entry
                    ExpDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Entry(
                        "ExpDate",
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._ExpDate_Stub,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._ExpDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._ExpDate_Validate,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._ExpDate_GetImplementationValue,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._ExpDate_SetImplementationValue,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._ExpDate_OnValueChanged);
                private static void _ExpDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreditCard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Data> c, global::LightSwitchApplication.CreditCard.DetailsClass d, object sf)
                {
                    c(d, ref d._ExpDate, sf);
                }
                private static bool _ExpDate_ComputeIsReadOnly(global::LightSwitchApplication.CreditCard e)
                {
                    bool result = false;
                    e.ExpDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ExpDate_Validate(global::LightSwitchApplication.CreditCard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ExpDate_Validate(r);
                }
                private static string _ExpDate_GetImplementationValue(global::LightSwitchApplication.CreditCard.DetailsClass d)
                {
                    return d.ImplementationEntity.ExpDate;
                }
                private static void _ExpDate_SetImplementationValue(global::LightSwitchApplication.CreditCard.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ExpDate = v;
                }
                private static void _ExpDate_OnValueChanged(global::LightSwitchApplication.CreditCard e)
                {
                    e.ExpDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Entry
                    SecurityCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Entry(
                        "SecurityCode",
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._SecurityCode_Stub,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._SecurityCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._SecurityCode_Validate,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._SecurityCode_GetImplementationValue,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._SecurityCode_SetImplementationValue,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._SecurityCode_OnValueChanged);
                private static void _SecurityCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreditCard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Data> c, global::LightSwitchApplication.CreditCard.DetailsClass d, object sf)
                {
                    c(d, ref d._SecurityCode, sf);
                }
                private static bool _SecurityCode_ComputeIsReadOnly(global::LightSwitchApplication.CreditCard e)
                {
                    bool result = false;
                    e.SecurityCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _SecurityCode_Validate(global::LightSwitchApplication.CreditCard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SecurityCode_Validate(r);
                }
                private static string _SecurityCode_GetImplementationValue(global::LightSwitchApplication.CreditCard.DetailsClass d)
                {
                    return d.ImplementationEntity.SecurityCode;
                }
                private static void _SecurityCode_SetImplementationValue(global::LightSwitchApplication.CreditCard.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SecurityCode = v;
                }
                private static void _SecurityCode_OnValueChanged(global::LightSwitchApplication.CreditCard e)
                {
                    e.SecurityCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreditCard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.CreditCard.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.CreditCard e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.CreditCard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.CreditCard.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.CreditCard e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, global::LightSwitchApplication.Trader>.Entry
                    Trader = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, global::LightSwitchApplication.Trader>.Entry(
                        "Trader",
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._Trader_Stub,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._Trader_ComputeIsReadOnly,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._Trader_Validate,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._Trader_GetCoreImplementationValue,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._Trader_GetImplementationValue,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._Trader_SetImplementationValue,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._Trader_Refresh,
                        global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties._Trader_OnValueChanged);
                private static void _Trader_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreditCard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, global::LightSwitchApplication.Trader>.Data> c, global::LightSwitchApplication.CreditCard.DetailsClass d, object sf)
                {
                    c(d, ref d._Trader, sf);
                }
                private static bool _Trader_ComputeIsReadOnly(global::LightSwitchApplication.CreditCard e)
                {
                    bool result = false;
                    e.Trader_IsReadOnly(ref result);
                    return result;
                }
                private static void _Trader_Validate(global::LightSwitchApplication.CreditCard e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Trader_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Trader_GetCoreImplementationValue(global::LightSwitchApplication.CreditCard.DetailsClass d)
                {
                    return d.ImplementationEntity.Trader;
                }
                private static global::LightSwitchApplication.Trader _Trader_GetImplementationValue(global::LightSwitchApplication.CreditCard.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass>(global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.Trader, ref d._Trader);
                }
                private static void _Trader_SetImplementationValue(global::LightSwitchApplication.CreditCard.DetailsClass d, global::LightSwitchApplication.Trader v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.Trader, ref d._Trader, (i, ev) => i.Trader = ev, v);
                }
                private static void _Trader_Refresh(global::LightSwitchApplication.CreditCard.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.CreditCard.DetailsClass.PropertySetProperties.Trader, ref d._Trader);
                }
                private static void _Trader_OnValueChanged(global::LightSwitchApplication.CreditCard e)
                {
                    e.Trader_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Data _HolderName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Data _CardNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Data _ExpDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, string>.Data _SecurityCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass, global::LightSwitchApplication.Trader>.Data _Trader;
            
        }
    
        #endregion
    }
    
    #endregion
}

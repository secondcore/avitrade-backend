

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Contract : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Contract entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Contract()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Contract(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Contract> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Contract.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contract_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contract_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Id);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.CreateDate);
            }
            set
            {
                global::LightSwitchApplication.Contract.DetailsClass.SetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.CreateDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Contract.DetailsClass.SetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.Contract.DetailsClass.SetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.StartDate);
            }
            set
            {
                global::LightSwitchApplication.Contract.DetailsClass.SetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.StartDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.EndDate);
            }
            set
            {
                global::LightSwitchApplication.Contract.DetailsClass.SetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.EndDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime TraderOneApprovalDate
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderOneApprovalDate);
            }
            set
            {
                global::LightSwitchApplication.Contract.DetailsClass.SetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderOneApprovalDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TraderOneApprovalDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TraderOneApprovalDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TraderOneApprovalDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime TraderTwoApprovalDate
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderTwoApprovalDate);
            }
            set
            {
                global::LightSwitchApplication.Contract.DetailsClass.SetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderTwoApprovalDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TraderTwoApprovalDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TraderTwoApprovalDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TraderTwoApprovalDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsTraderOneApproved
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.IsTraderOneApproved);
            }
            set
            {
                global::LightSwitchApplication.Contract.DetailsClass.SetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.IsTraderOneApproved, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsTraderOneApproved_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsTraderOneApproved_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsTraderOneApproved_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsTraderTwoApproved
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.IsTraderTwoApproved);
            }
            set
            {
                global::LightSwitchApplication.Contract.DetailsClass.SetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.IsTraderTwoApproved, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsTraderTwoApproved_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsTraderTwoApproved_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsTraderTwoApproved_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BillingCurrencyId
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.BillingCurrencyId);
            }
            set
            {
                global::LightSwitchApplication.Contract.DetailsClass.SetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.BillingCurrencyId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingCurrencyId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingCurrencyId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillingCurrencyId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int TimeZoneId
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TimeZoneId);
            }
            set
            {
                global::LightSwitchApplication.Contract.DetailsClass.SetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TimeZoneId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.RowVersion);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Summary
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Summary);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Summary_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Summary_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Status
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Status);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Instance Instance
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Instance);
            }
            set
            {
                global::LightSwitchApplication.Contract.DetailsClass.SetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Instance, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instance_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instance_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Instance_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Trader TraderOne
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderOne);
            }
            set
            {
                global::LightSwitchApplication.Contract.DetailsClass.SetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderOne, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TraderOne_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TraderOne_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TraderOne_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Trader TraderTwo
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderTwo);
            }
            set
            {
                global::LightSwitchApplication.Contract.DetailsClass.SetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderTwo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TraderTwo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TraderTwo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TraderTwo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Order> Orders
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetValue(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Orders);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Order> OrdersQuery
        {
            get
            {
                return global::LightSwitchApplication.Contract.DetailsClass.GetQuery(this, global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Orders);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Contract,
                global::LightSwitchApplication.Contract.DetailsClass,
                global::LightSwitchApplication.Contract.DetailsClass.IImplementation,
                global::LightSwitchApplication.Contract.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass>.Entry
                __ContractEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass>.Entry(
                    global::LightSwitchApplication.Contract.DetailsClass.__Contract_CreateNew,
                    global::LightSwitchApplication.Contract.DetailsClass.__Contract_Created,
                    global::LightSwitchApplication.Contract.DetailsClass.__Contract_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Contract __Contract_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Contract> es)
            {
                return new global::LightSwitchApplication.Contract(es);
            }
            private static void __Contract_Created(global::LightSwitchApplication.Contract e)
            {
                e.Contract_Created();
            }
            private static bool __Contract_AllowSaveWithErrors(global::LightSwitchApplication.Contract e)
            {
                bool result = false;
                e.Contract_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Contract.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime> CreateDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.CreateDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime> StartDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.StartDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime> EndDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.EndDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime> TraderOneApprovalDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderOneApprovalDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime> TraderTwoApprovalDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderTwoApprovalDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, bool> IsTraderOneApproved
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.IsTraderOneApproved) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, bool> IsTraderTwoApproved
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.IsTraderTwoApproved) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string> BillingCurrencyId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.BillingCurrencyId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, int> TimeZoneId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TimeZoneId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string> Summary
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Summary) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Instance> Instance
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Instance) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Instance>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Trader> TraderOne
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderOne) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Trader>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Trader> TraderTwo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderTwo) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Trader>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Order> Orders
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Orders) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Order>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; }
                new global::System.DateTime CreateDate { get; set; }
                new string Name { get; set; }
                new string Description { get; set; }
                new global::System.DateTime StartDate { get; set; }
                new global::System.DateTime EndDate { get; set; }
                new global::System.DateTime TraderOneApprovalDate { get; set; }
                new global::System.DateTime TraderTwoApprovalDate { get; set; }
                new bool IsTraderOneApproved { get; set; }
                new bool IsTraderTwoApproved { get; set; }
                new string BillingCurrencyId { get; set; }
                new int TimeZoneId { get; set; }
                new byte[] RowVersion { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Instance { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation TraderOne { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation TraderTwo { get; set; }
                new global::System.Collections.IEnumerable Orders { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, int>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Entry
                    CreateDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Entry(
                        "CreateDate",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._CreateDate_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._CreateDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._CreateDate_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._CreateDate_GetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._CreateDate_SetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._CreateDate_OnValueChanged);
                private static void _CreateDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateDate, sf);
                }
                private static bool _CreateDate_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.CreateDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreateDate_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreateDate_Validate(r);
                }
                private static global::System.DateTime _CreateDate_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.CreateDate;
                }
                private static void _CreateDate_SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.CreateDate = global::LightSwitchApplication.Contract.DetailsClass.TruncateDate(v);
                }
                private static void _CreateDate_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.CreateDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Entry
                    StartDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Entry(
                        "StartDate",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._StartDate_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._StartDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._StartDate_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._StartDate_GetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._StartDate_SetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._StartDate_OnValueChanged);
                private static void _StartDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._StartDate, sf);
                }
                private static bool _StartDate_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.StartDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _StartDate_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StartDate_Validate(r);
                }
                private static global::System.DateTime _StartDate_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.StartDate;
                }
                private static void _StartDate_SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.StartDate = global::LightSwitchApplication.Contract.DetailsClass.TruncateDate(v);
                }
                private static void _StartDate_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.StartDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Entry
                    EndDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Entry(
                        "EndDate",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._EndDate_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._EndDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._EndDate_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._EndDate_GetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._EndDate_SetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._EndDate_OnValueChanged);
                private static void _EndDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._EndDate, sf);
                }
                private static bool _EndDate_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.EndDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _EndDate_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EndDate_Validate(r);
                }
                private static global::System.DateTime _EndDate_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.EndDate;
                }
                private static void _EndDate_SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.EndDate = global::LightSwitchApplication.Contract.DetailsClass.TruncateDate(v);
                }
                private static void _EndDate_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.EndDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Entry
                    TraderOneApprovalDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Entry(
                        "TraderOneApprovalDate",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderOneApprovalDate_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderOneApprovalDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderOneApprovalDate_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderOneApprovalDate_GetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderOneApprovalDate_SetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderOneApprovalDate_OnValueChanged);
                private static void _TraderOneApprovalDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._TraderOneApprovalDate, sf);
                }
                private static bool _TraderOneApprovalDate_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.TraderOneApprovalDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _TraderOneApprovalDate_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TraderOneApprovalDate_Validate(r);
                }
                private static global::System.DateTime _TraderOneApprovalDate_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.TraderOneApprovalDate;
                }
                private static void _TraderOneApprovalDate_SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.TraderOneApprovalDate = global::LightSwitchApplication.Contract.DetailsClass.TruncateDate(v);
                }
                private static void _TraderOneApprovalDate_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.TraderOneApprovalDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Entry
                    TraderTwoApprovalDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Entry(
                        "TraderTwoApprovalDate",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderTwoApprovalDate_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderTwoApprovalDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderTwoApprovalDate_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderTwoApprovalDate_GetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderTwoApprovalDate_SetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderTwoApprovalDate_OnValueChanged);
                private static void _TraderTwoApprovalDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._TraderTwoApprovalDate, sf);
                }
                private static bool _TraderTwoApprovalDate_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.TraderTwoApprovalDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _TraderTwoApprovalDate_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TraderTwoApprovalDate_Validate(r);
                }
                private static global::System.DateTime _TraderTwoApprovalDate_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.TraderTwoApprovalDate;
                }
                private static void _TraderTwoApprovalDate_SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.TraderTwoApprovalDate = global::LightSwitchApplication.Contract.DetailsClass.TruncateDate(v);
                }
                private static void _TraderTwoApprovalDate_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.TraderTwoApprovalDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, bool>.Entry
                    IsTraderOneApproved = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, bool>.Entry(
                        "IsTraderOneApproved",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._IsTraderOneApproved_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._IsTraderOneApproved_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._IsTraderOneApproved_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._IsTraderOneApproved_GetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._IsTraderOneApproved_SetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._IsTraderOneApproved_OnValueChanged);
                private static void _IsTraderOneApproved_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._IsTraderOneApproved, sf);
                }
                private static bool _IsTraderOneApproved_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.IsTraderOneApproved_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsTraderOneApproved_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsTraderOneApproved_Validate(r);
                }
                private static bool _IsTraderOneApproved_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.IsTraderOneApproved;
                }
                private static void _IsTraderOneApproved_SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsTraderOneApproved = v;
                }
                private static void _IsTraderOneApproved_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.IsTraderOneApproved_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, bool>.Entry
                    IsTraderTwoApproved = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, bool>.Entry(
                        "IsTraderTwoApproved",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._IsTraderTwoApproved_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._IsTraderTwoApproved_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._IsTraderTwoApproved_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._IsTraderTwoApproved_GetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._IsTraderTwoApproved_SetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._IsTraderTwoApproved_OnValueChanged);
                private static void _IsTraderTwoApproved_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._IsTraderTwoApproved, sf);
                }
                private static bool _IsTraderTwoApproved_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.IsTraderTwoApproved_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsTraderTwoApproved_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsTraderTwoApproved_Validate(r);
                }
                private static bool _IsTraderTwoApproved_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.IsTraderTwoApproved;
                }
                private static void _IsTraderTwoApproved_SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsTraderTwoApproved = v;
                }
                private static void _IsTraderTwoApproved_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.IsTraderTwoApproved_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Entry
                    BillingCurrencyId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Entry(
                        "BillingCurrencyId",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._BillingCurrencyId_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._BillingCurrencyId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._BillingCurrencyId_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._BillingCurrencyId_GetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._BillingCurrencyId_SetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._BillingCurrencyId_OnValueChanged);
                private static void _BillingCurrencyId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._BillingCurrencyId, sf);
                }
                private static bool _BillingCurrencyId_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.BillingCurrencyId_IsReadOnly(ref result);
                    return result;
                }
                private static void _BillingCurrencyId_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BillingCurrencyId_Validate(r);
                }
                private static string _BillingCurrencyId_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.BillingCurrencyId;
                }
                private static void _BillingCurrencyId_SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BillingCurrencyId = v;
                }
                private static void _BillingCurrencyId_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.BillingCurrencyId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, int>.Entry
                    TimeZoneId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, int>.Entry(
                        "TimeZoneId",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TimeZoneId_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TimeZoneId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TimeZoneId_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TimeZoneId_GetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TimeZoneId_SetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TimeZoneId_OnValueChanged);
                private static void _TimeZoneId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, int>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeZoneId, sf);
                }
                private static bool _TimeZoneId_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.TimeZoneId_IsReadOnly(ref result);
                    return result;
                }
                private static void _TimeZoneId_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TimeZoneId_Validate(r);
                }
                private static int _TimeZoneId_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.TimeZoneId;
                }
                private static void _TimeZoneId_SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d, int v)
                {
                    d.ImplementationEntity.TimeZoneId = v;
                }
                private static void _TimeZoneId_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.TimeZoneId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Entry
                    Summary = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Entry(
                        "Summary",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Summary_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Summary_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Summary_ComputeValue);
                private static void _Summary_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._Summary, sf);
                }
                private static void _Summary_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Summary_Validate(r);
                }
                private static string _Summary_ComputeValue(global::LightSwitchApplication.Contract e)
                {
                    string value = default(string);
                    e.Summary_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Entry(
                        "Status",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Status_ComputeValue);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static void _Status_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static string _Status_ComputeValue(global::LightSwitchApplication.Contract e)
                {
                    string value = default(string);
                    e.Status_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Instance>.Entry
                    Instance = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Instance>.Entry(
                        "Instance",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Instance_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Instance_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Instance_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Instance_GetCoreImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Instance_GetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Instance_SetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Instance_Refresh,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Instance_OnValueChanged);
                private static void _Instance_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Instance>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._Instance, sf);
                }
                private static bool _Instance_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.Instance_IsReadOnly(ref result);
                    return result;
                }
                private static void _Instance_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Instance_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Instance_GetCoreImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.Instance;
                }
                private static global::LightSwitchApplication.Instance _Instance_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Instance, global::LightSwitchApplication.Instance.DetailsClass>(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Instance, ref d._Instance);
                }
                private static void _Instance_SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d, global::LightSwitchApplication.Instance v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Instance, ref d._Instance, (i, ev) => i.Instance = ev, v);
                }
                private static void _Instance_Refresh(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Instance, ref d._Instance);
                }
                private static void _Instance_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.Instance_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Trader>.Entry
                    TraderOne = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Trader>.Entry(
                        "TraderOne",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderOne_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderOne_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderOne_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderOne_GetCoreImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderOne_GetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderOne_SetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderOne_Refresh,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderOne_OnValueChanged);
                private static void _TraderOne_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Trader>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._TraderOne, sf);
                }
                private static bool _TraderOne_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.TraderOne_IsReadOnly(ref result);
                    return result;
                }
                private static void _TraderOne_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TraderOne_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _TraderOne_GetCoreImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.TraderOne;
                }
                private static global::LightSwitchApplication.Trader _TraderOne_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass>(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderOne, ref d._TraderOne);
                }
                private static void _TraderOne_SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d, global::LightSwitchApplication.Trader v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderOne, ref d._TraderOne, (i, ev) => i.TraderOne = ev, v);
                }
                private static void _TraderOne_Refresh(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderOne, ref d._TraderOne);
                }
                private static void _TraderOne_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.TraderOne_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Trader>.Entry
                    TraderTwo = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Trader>.Entry(
                        "TraderTwo",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderTwo_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderTwo_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderTwo_Validate,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderTwo_GetCoreImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderTwo_GetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderTwo_SetImplementationValue,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderTwo_Refresh,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._TraderTwo_OnValueChanged);
                private static void _TraderTwo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Trader>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._TraderTwo, sf);
                }
                private static bool _TraderTwo_ComputeIsReadOnly(global::LightSwitchApplication.Contract e)
                {
                    bool result = false;
                    e.TraderTwo_IsReadOnly(ref result);
                    return result;
                }
                private static void _TraderTwo_Validate(global::LightSwitchApplication.Contract e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TraderTwo_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _TraderTwo_GetCoreImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.TraderTwo;
                }
                private static global::LightSwitchApplication.Trader _TraderTwo_GetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass>(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderTwo, ref d._TraderTwo);
                }
                private static void _TraderTwo_SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass d, global::LightSwitchApplication.Trader v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderTwo, ref d._TraderTwo, (i, ev) => i.TraderTwo = ev, v);
                }
                private static void _TraderTwo_Refresh(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.TraderTwo, ref d._TraderTwo);
                }
                private static void _TraderTwo_OnValueChanged(global::LightSwitchApplication.Contract e)
                {
                    e.TraderTwo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Order>.Entry
                    Orders = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Order>.Entry(
                        "Orders",
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Orders_Stub,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Orders_GetReferencedEntities,
                        global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties._Orders_GetEntityCollection);
                private static void _Orders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contract.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Order>.Data> c, global::LightSwitchApplication.Contract.DetailsClass d, object sf)
                {
                    c(d, ref d._Orders, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order> _Orders_GetReferencedEntities(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>(global::LightSwitchApplication.Contract.DetailsClass.PropertySetProperties.Orders, ref d._Orders);
                }
                private static global::System.Collections.IEnumerable _Orders_GetEntityCollection(global::LightSwitchApplication.Contract.DetailsClass d)
                {
                    return d.ImplementationEntity.Orders;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Data _CreateDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Data _StartDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Data _EndDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Data _TraderOneApprovalDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::System.DateTime>.Data _TraderTwoApprovalDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, bool>.Data _IsTraderOneApproved;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, bool>.Data _IsTraderTwoApproved;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Data _BillingCurrencyId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, int>.Data _TimeZoneId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Data _Summary;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, string>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Instance>.Data _Instance;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Trader>.Data _TraderOne;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Trader>.Data _TraderTwo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass, global::LightSwitchApplication.Order>.Data _Orders;
            
        }
    
        #endregion
    }
    
    #endregion
}

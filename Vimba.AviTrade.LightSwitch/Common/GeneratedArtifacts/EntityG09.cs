

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Order : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Order entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Order()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Order(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Order> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Order.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Id);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrderDate);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrderDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime QuotationDate
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.QuotationDate);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.QuotationDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuotationDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuotationDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuotationDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsQuoted
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.IsQuoted);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.IsQuoted, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsQuoted_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsQuoted_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsQuoted_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ApprovalDate
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ApprovalDate);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ApprovalDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsApproved
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.IsApproved);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.IsApproved, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsApproved_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsApproved_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsApproved_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime FulfilmentDate
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.FulfilmentDate);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.FulfilmentDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FulfilmentDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FulfilmentDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FulfilmentDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsFulfilled
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.IsFulfilled);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.IsFulfilled, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsFulfilled_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsFulfilled_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsFulfilled_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Status
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double Amount
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Amount);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Amount, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Amount_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Amount_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Amount_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double PivotExchangeRate
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.PivotExchangeRate);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.PivotExchangeRate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PivotExchangeRate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PivotExchangeRate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PivotExchangeRate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double GlobalPivotExchangeRate
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.GlobalPivotExchangeRate);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.GlobalPivotExchangeRate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GlobalPivotExchangeRate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GlobalPivotExchangeRate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GlobalPivotExchangeRate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double AdminFee
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.AdminFee);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.AdminFee, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AdminFee_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AdminFee_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AdminFee_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BuyerCardHolderName
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerCardHolderName);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerCardHolderName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerCardHolderName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerCardHolderName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerCardHolderName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BuyerCardNumber
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerCardNumber);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerCardNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerCardNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerCardNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerCardNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BuyerCardExpDate
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerCardExpDate);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerCardExpDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerCardExpDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerCardExpDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerCardExpDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BuyerCardSecurityCode
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerCardSecurityCode);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerCardSecurityCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerCardSecurityCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerCardSecurityCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerCardSecurityCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BuyerPaypalUserId
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerPaypalUserId);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerPaypalUserId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerPaypalUserId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerPaypalUserId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerPaypalUserId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BuyerPaypalPassword
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerPaypalPassword);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerPaypalPassword, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerPaypalPassword_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerPaypalPassword_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerPaypalPassword_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BuyerReferenceNumber
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerReferenceNumber);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerReferenceNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerReferenceNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerReferenceNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BuyerReferenceNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SellerCardHolderName
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerCardHolderName);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerCardHolderName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerCardHolderName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerCardHolderName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerCardHolderName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SellerCardNumber
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerCardNumber);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerCardNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerCardNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerCardNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerCardNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SellerCardExpDate
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerCardExpDate);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerCardExpDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerCardExpDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerCardExpDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerCardExpDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SellerCardSecurityCode
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerCardSecurityCode);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerCardSecurityCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerCardSecurityCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerCardSecurityCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerCardSecurityCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SellerPaypalUserId
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerPaypalUserId);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerPaypalUserId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerPaypalUserId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerPaypalUserId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerPaypalUserId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SellerPaypalPassword
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerPaypalPassword);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerPaypalPassword, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerPaypalPassword_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerPaypalPassword_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerPaypalPassword_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SellerReferenceNumber
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerReferenceNumber);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerReferenceNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerReferenceNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerReferenceNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellerReferenceNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Operateur
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Operateur);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Operateur, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operateur_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operateur_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operateur_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FlightNumber
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.FlightNumber);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.FlightNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FlightNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FlightNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FlightNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime EstimatedTakeoffTime
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.EstimatedTakeoffTime);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.EstimatedTakeoffTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EstimatedTakeoffTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EstimatedTakeoffTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EstimatedTakeoffTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime EstimatedLandingTime
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.EstimatedLandingTime);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.EstimatedLandingTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EstimatedLandingTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EstimatedLandingTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EstimatedLandingTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string State
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.State);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double GlobalPivotAmount
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.GlobalPivotAmount);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GlobalPivotAmount_Compute(ref double result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GlobalPivotAmount_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double GlobalPivotAdminFee
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.GlobalPivotAdminFee);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GlobalPivotAdminFee_Compute(ref double result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GlobalPivotAdminFee_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ItemsCount
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ItemsCount);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemsCount_Compute(ref int result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemsCount_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.OrderLineItem> OrderLineItems
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrderLineItems);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.OrderLineItem> OrderLineItemsQuery
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetQuery(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrderLineItems);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Aircraft Aircraft
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Aircraft);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Aircraft, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Aircraft_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Aircraft_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Aircraft_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Airport LandingAirport
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LandingAirport);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LandingAirport, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LandingAirport_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LandingAirport_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LandingAirport_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Airport TakeoffAirport
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TakeoffAirport);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TakeoffAirport, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TakeoffAirport_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TakeoffAirport_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TakeoffAirport_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Contract Contract
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Contract);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Contract, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contract_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contract_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contract_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Trader Buyer
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Buyer);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Buyer, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Buyer_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Buyer_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Buyer_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Trader Seller
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Seller);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Seller, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Seller_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Seller_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Seller_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Order,
                global::LightSwitchApplication.Order.DetailsClass,
                global::LightSwitchApplication.Order.DetailsClass.IImplementation,
                global::LightSwitchApplication.Order.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>.Entry
                __OrderEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>.Entry(
                    global::LightSwitchApplication.Order.DetailsClass.__Order_CreateNew,
                    global::LightSwitchApplication.Order.DetailsClass.__Order_Created,
                    global::LightSwitchApplication.Order.DetailsClass.__Order_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Order __Order_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Order> es)
            {
                return new global::LightSwitchApplication.Order(es);
            }
            private static void __Order_Created(global::LightSwitchApplication.Order e)
            {
                e.Order_Created();
            }
            private static bool __Order_AllowSaveWithErrors(global::LightSwitchApplication.Order e)
            {
                bool result = false;
                e.Order_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Order.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime> OrderDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrderDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime> QuotationDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.QuotationDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool> IsQuoted
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.IsQuoted) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime> ApprovalDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ApprovalDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool> IsApproved
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.IsApproved) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime> FulfilmentDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.FulfilmentDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool> IsFulfilled
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.IsFulfilled) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double> Amount
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Amount) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double> PivotExchangeRate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.PivotExchangeRate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double> GlobalPivotExchangeRate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.GlobalPivotExchangeRate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double> AdminFee
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.AdminFee) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> BuyerCardHolderName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerCardHolderName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> BuyerCardNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerCardNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> BuyerCardExpDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerCardExpDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> BuyerCardSecurityCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerCardSecurityCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> BuyerPaypalUserId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerPaypalUserId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> BuyerPaypalPassword
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerPaypalPassword) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> BuyerReferenceNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.BuyerReferenceNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> SellerCardHolderName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerCardHolderName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> SellerCardNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerCardNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> SellerCardExpDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerCardExpDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> SellerCardSecurityCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerCardSecurityCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> SellerPaypalUserId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerPaypalUserId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> SellerPaypalPassword
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerPaypalPassword) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> SellerReferenceNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.SellerReferenceNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> Operateur
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Operateur) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> FlightNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.FlightNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime> EstimatedTakeoffTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.EstimatedTakeoffTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime> EstimatedLandingTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.EstimatedLandingTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> State
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.State) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double> GlobalPivotAmount
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.GlobalPivotAmount) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double> GlobalPivotAdminFee
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.GlobalPivotAdminFee) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int> ItemsCount
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ItemsCount) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.OrderLineItem> OrderLineItems
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrderLineItems) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.OrderLineItem>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Aircraft> Aircraft
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Aircraft) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Aircraft>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Airport> LandingAirport
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LandingAirport) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Airport>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Airport> TakeoffAirport
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TakeoffAirport) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Airport>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Contract> Contract
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Contract) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Contract>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Trader> Buyer
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Buyer) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Trader>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Trader> Seller
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Seller) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Trader>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; }
                new global::System.DateTime OrderDate { get; set; }
                new global::System.DateTime QuotationDate { get; set; }
                new bool IsQuoted { get; set; }
                new global::System.DateTime ApprovalDate { get; set; }
                new bool IsApproved { get; set; }
                new global::System.DateTime FulfilmentDate { get; set; }
                new bool IsFulfilled { get; set; }
                new int Status { get; set; }
                new double Amount { get; set; }
                new double PivotExchangeRate { get; set; }
                new double GlobalPivotExchangeRate { get; set; }
                new double AdminFee { get; set; }
                new string BuyerCardHolderName { get; set; }
                new string BuyerCardNumber { get; set; }
                new string BuyerCardExpDate { get; set; }
                new string BuyerCardSecurityCode { get; set; }
                new string BuyerPaypalUserId { get; set; }
                new string BuyerPaypalPassword { get; set; }
                new string BuyerReferenceNumber { get; set; }
                new string SellerCardHolderName { get; set; }
                new string SellerCardNumber { get; set; }
                new string SellerCardExpDate { get; set; }
                new string SellerCardSecurityCode { get; set; }
                new string SellerPaypalUserId { get; set; }
                new string SellerPaypalPassword { get; set; }
                new string SellerReferenceNumber { get; set; }
                new string Operateur { get; set; }
                new string FlightNumber { get; set; }
                new global::System.DateTime EstimatedTakeoffTime { get; set; }
                new global::System.DateTime EstimatedLandingTime { get; set; }
                new global::System.Collections.IEnumerable OrderLineItems { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Aircraft { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation LandingAirport { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation TakeoffAirport { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Contract { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Buyer { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Seller { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Entry
                    OrderDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Entry(
                        "OrderDate",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderDate_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderDate_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderDate_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderDate_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderDate_OnValueChanged);
                private static void _OrderDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._OrderDate, sf);
                }
                private static bool _OrderDate_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.OrderDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _OrderDate_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OrderDate_Validate(r);
                }
                private static global::System.DateTime _OrderDate_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.OrderDate;
                }
                private static void _OrderDate_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.OrderDate = global::LightSwitchApplication.Order.DetailsClass.TruncateDate(v);
                }
                private static void _OrderDate_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.OrderDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Entry
                    QuotationDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Entry(
                        "QuotationDate",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._QuotationDate_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._QuotationDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._QuotationDate_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._QuotationDate_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._QuotationDate_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._QuotationDate_OnValueChanged);
                private static void _QuotationDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._QuotationDate, sf);
                }
                private static bool _QuotationDate_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.QuotationDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _QuotationDate_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QuotationDate_Validate(r);
                }
                private static global::System.DateTime _QuotationDate_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.QuotationDate;
                }
                private static void _QuotationDate_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.QuotationDate = global::LightSwitchApplication.Order.DetailsClass.TruncateDate(v);
                }
                private static void _QuotationDate_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.QuotationDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Entry
                    IsQuoted = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Entry(
                        "IsQuoted",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsQuoted_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsQuoted_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsQuoted_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsQuoted_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsQuoted_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsQuoted_OnValueChanged);
                private static void _IsQuoted_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._IsQuoted, sf);
                }
                private static bool _IsQuoted_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.IsQuoted_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsQuoted_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsQuoted_Validate(r);
                }
                private static bool _IsQuoted_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.IsQuoted;
                }
                private static void _IsQuoted_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsQuoted = v;
                }
                private static void _IsQuoted_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.IsQuoted_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Entry
                    ApprovalDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Entry(
                        "ApprovalDate",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ApprovalDate_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ApprovalDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ApprovalDate_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ApprovalDate_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ApprovalDate_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ApprovalDate_OnValueChanged);
                private static void _ApprovalDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._ApprovalDate, sf);
                }
                private static bool _ApprovalDate_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.ApprovalDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ApprovalDate_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ApprovalDate_Validate(r);
                }
                private static global::System.DateTime _ApprovalDate_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.ApprovalDate;
                }
                private static void _ApprovalDate_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.ApprovalDate = global::LightSwitchApplication.Order.DetailsClass.TruncateDate(v);
                }
                private static void _ApprovalDate_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.ApprovalDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Entry
                    IsApproved = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Entry(
                        "IsApproved",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsApproved_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsApproved_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsApproved_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsApproved_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsApproved_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsApproved_OnValueChanged);
                private static void _IsApproved_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._IsApproved, sf);
                }
                private static bool _IsApproved_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.IsApproved_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsApproved_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsApproved_Validate(r);
                }
                private static bool _IsApproved_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.IsApproved;
                }
                private static void _IsApproved_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsApproved = v;
                }
                private static void _IsApproved_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.IsApproved_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Entry
                    FulfilmentDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Entry(
                        "FulfilmentDate",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._FulfilmentDate_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._FulfilmentDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._FulfilmentDate_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._FulfilmentDate_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._FulfilmentDate_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._FulfilmentDate_OnValueChanged);
                private static void _FulfilmentDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._FulfilmentDate, sf);
                }
                private static bool _FulfilmentDate_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.FulfilmentDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _FulfilmentDate_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FulfilmentDate_Validate(r);
                }
                private static global::System.DateTime _FulfilmentDate_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.FulfilmentDate;
                }
                private static void _FulfilmentDate_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.FulfilmentDate = global::LightSwitchApplication.Order.DetailsClass.TruncateDate(v);
                }
                private static void _FulfilmentDate_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.FulfilmentDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Entry
                    IsFulfilled = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Entry(
                        "IsFulfilled",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsFulfilled_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsFulfilled_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsFulfilled_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsFulfilled_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsFulfilled_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsFulfilled_OnValueChanged);
                private static void _IsFulfilled_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._IsFulfilled, sf);
                }
                private static bool _IsFulfilled_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.IsFulfilled_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsFulfilled_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsFulfilled_Validate(r);
                }
                private static bool _IsFulfilled_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.IsFulfilled;
                }
                private static void _IsFulfilled_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsFulfilled = v;
                }
                private static void _IsFulfilled_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.IsFulfilled_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Entry(
                        "Status",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static int _Status_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry
                    Amount = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry(
                        "Amount",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Amount_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Amount_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Amount_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Amount_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Amount_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Amount_OnValueChanged);
                private static void _Amount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Amount, sf);
                }
                private static bool _Amount_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Amount_IsReadOnly(ref result);
                    return result;
                }
                private static void _Amount_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Amount_Validate(r);
                }
                private static double _Amount_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Amount;
                }
                private static void _Amount_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, double v)
                {
                    d.ImplementationEntity.Amount = v;
                }
                private static void _Amount_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Amount_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry
                    PivotExchangeRate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry(
                        "PivotExchangeRate",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._PivotExchangeRate_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._PivotExchangeRate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._PivotExchangeRate_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._PivotExchangeRate_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._PivotExchangeRate_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._PivotExchangeRate_OnValueChanged);
                private static void _PivotExchangeRate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._PivotExchangeRate, sf);
                }
                private static bool _PivotExchangeRate_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.PivotExchangeRate_IsReadOnly(ref result);
                    return result;
                }
                private static void _PivotExchangeRate_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PivotExchangeRate_Validate(r);
                }
                private static double _PivotExchangeRate_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.PivotExchangeRate;
                }
                private static void _PivotExchangeRate_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, double v)
                {
                    d.ImplementationEntity.PivotExchangeRate = v;
                }
                private static void _PivotExchangeRate_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.PivotExchangeRate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry
                    GlobalPivotExchangeRate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry(
                        "GlobalPivotExchangeRate",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._GlobalPivotExchangeRate_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._GlobalPivotExchangeRate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._GlobalPivotExchangeRate_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._GlobalPivotExchangeRate_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._GlobalPivotExchangeRate_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._GlobalPivotExchangeRate_OnValueChanged);
                private static void _GlobalPivotExchangeRate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._GlobalPivotExchangeRate, sf);
                }
                private static bool _GlobalPivotExchangeRate_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.GlobalPivotExchangeRate_IsReadOnly(ref result);
                    return result;
                }
                private static void _GlobalPivotExchangeRate_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.GlobalPivotExchangeRate_Validate(r);
                }
                private static double _GlobalPivotExchangeRate_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.GlobalPivotExchangeRate;
                }
                private static void _GlobalPivotExchangeRate_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, double v)
                {
                    d.ImplementationEntity.GlobalPivotExchangeRate = v;
                }
                private static void _GlobalPivotExchangeRate_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.GlobalPivotExchangeRate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry
                    AdminFee = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry(
                        "AdminFee",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AdminFee_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AdminFee_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AdminFee_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AdminFee_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AdminFee_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AdminFee_OnValueChanged);
                private static void _AdminFee_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._AdminFee, sf);
                }
                private static bool _AdminFee_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.AdminFee_IsReadOnly(ref result);
                    return result;
                }
                private static void _AdminFee_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AdminFee_Validate(r);
                }
                private static double _AdminFee_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.AdminFee;
                }
                private static void _AdminFee_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, double v)
                {
                    d.ImplementationEntity.AdminFee = v;
                }
                private static void _AdminFee_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.AdminFee_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    BuyerCardHolderName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "BuyerCardHolderName",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardHolderName_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardHolderName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardHolderName_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardHolderName_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardHolderName_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardHolderName_OnValueChanged);
                private static void _BuyerCardHolderName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._BuyerCardHolderName, sf);
                }
                private static bool _BuyerCardHolderName_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.BuyerCardHolderName_IsReadOnly(ref result);
                    return result;
                }
                private static void _BuyerCardHolderName_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BuyerCardHolderName_Validate(r);
                }
                private static string _BuyerCardHolderName_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.BuyerCardHolderName;
                }
                private static void _BuyerCardHolderName_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BuyerCardHolderName = v;
                }
                private static void _BuyerCardHolderName_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.BuyerCardHolderName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    BuyerCardNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "BuyerCardNumber",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardNumber_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardNumber_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardNumber_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardNumber_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardNumber_OnValueChanged);
                private static void _BuyerCardNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._BuyerCardNumber, sf);
                }
                private static bool _BuyerCardNumber_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.BuyerCardNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _BuyerCardNumber_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BuyerCardNumber_Validate(r);
                }
                private static string _BuyerCardNumber_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.BuyerCardNumber;
                }
                private static void _BuyerCardNumber_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BuyerCardNumber = v;
                }
                private static void _BuyerCardNumber_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.BuyerCardNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    BuyerCardExpDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "BuyerCardExpDate",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardExpDate_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardExpDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardExpDate_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardExpDate_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardExpDate_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardExpDate_OnValueChanged);
                private static void _BuyerCardExpDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._BuyerCardExpDate, sf);
                }
                private static bool _BuyerCardExpDate_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.BuyerCardExpDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _BuyerCardExpDate_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BuyerCardExpDate_Validate(r);
                }
                private static string _BuyerCardExpDate_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.BuyerCardExpDate;
                }
                private static void _BuyerCardExpDate_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BuyerCardExpDate = v;
                }
                private static void _BuyerCardExpDate_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.BuyerCardExpDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    BuyerCardSecurityCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "BuyerCardSecurityCode",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardSecurityCode_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardSecurityCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardSecurityCode_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardSecurityCode_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardSecurityCode_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerCardSecurityCode_OnValueChanged);
                private static void _BuyerCardSecurityCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._BuyerCardSecurityCode, sf);
                }
                private static bool _BuyerCardSecurityCode_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.BuyerCardSecurityCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _BuyerCardSecurityCode_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BuyerCardSecurityCode_Validate(r);
                }
                private static string _BuyerCardSecurityCode_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.BuyerCardSecurityCode;
                }
                private static void _BuyerCardSecurityCode_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BuyerCardSecurityCode = v;
                }
                private static void _BuyerCardSecurityCode_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.BuyerCardSecurityCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    BuyerPaypalUserId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "BuyerPaypalUserId",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerPaypalUserId_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerPaypalUserId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerPaypalUserId_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerPaypalUserId_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerPaypalUserId_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerPaypalUserId_OnValueChanged);
                private static void _BuyerPaypalUserId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._BuyerPaypalUserId, sf);
                }
                private static bool _BuyerPaypalUserId_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.BuyerPaypalUserId_IsReadOnly(ref result);
                    return result;
                }
                private static void _BuyerPaypalUserId_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BuyerPaypalUserId_Validate(r);
                }
                private static string _BuyerPaypalUserId_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.BuyerPaypalUserId;
                }
                private static void _BuyerPaypalUserId_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BuyerPaypalUserId = v;
                }
                private static void _BuyerPaypalUserId_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.BuyerPaypalUserId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    BuyerPaypalPassword = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "BuyerPaypalPassword",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerPaypalPassword_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerPaypalPassword_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerPaypalPassword_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerPaypalPassword_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerPaypalPassword_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerPaypalPassword_OnValueChanged);
                private static void _BuyerPaypalPassword_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._BuyerPaypalPassword, sf);
                }
                private static bool _BuyerPaypalPassword_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.BuyerPaypalPassword_IsReadOnly(ref result);
                    return result;
                }
                private static void _BuyerPaypalPassword_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BuyerPaypalPassword_Validate(r);
                }
                private static string _BuyerPaypalPassword_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.BuyerPaypalPassword;
                }
                private static void _BuyerPaypalPassword_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BuyerPaypalPassword = v;
                }
                private static void _BuyerPaypalPassword_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.BuyerPaypalPassword_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    BuyerReferenceNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "BuyerReferenceNumber",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerReferenceNumber_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerReferenceNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerReferenceNumber_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerReferenceNumber_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerReferenceNumber_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._BuyerReferenceNumber_OnValueChanged);
                private static void _BuyerReferenceNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._BuyerReferenceNumber, sf);
                }
                private static bool _BuyerReferenceNumber_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.BuyerReferenceNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _BuyerReferenceNumber_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BuyerReferenceNumber_Validate(r);
                }
                private static string _BuyerReferenceNumber_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.BuyerReferenceNumber;
                }
                private static void _BuyerReferenceNumber_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BuyerReferenceNumber = v;
                }
                private static void _BuyerReferenceNumber_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.BuyerReferenceNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    SellerCardHolderName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "SellerCardHolderName",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardHolderName_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardHolderName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardHolderName_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardHolderName_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardHolderName_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardHolderName_OnValueChanged);
                private static void _SellerCardHolderName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._SellerCardHolderName, sf);
                }
                private static bool _SellerCardHolderName_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.SellerCardHolderName_IsReadOnly(ref result);
                    return result;
                }
                private static void _SellerCardHolderName_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SellerCardHolderName_Validate(r);
                }
                private static string _SellerCardHolderName_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.SellerCardHolderName;
                }
                private static void _SellerCardHolderName_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SellerCardHolderName = v;
                }
                private static void _SellerCardHolderName_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.SellerCardHolderName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    SellerCardNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "SellerCardNumber",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardNumber_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardNumber_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardNumber_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardNumber_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardNumber_OnValueChanged);
                private static void _SellerCardNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._SellerCardNumber, sf);
                }
                private static bool _SellerCardNumber_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.SellerCardNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _SellerCardNumber_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SellerCardNumber_Validate(r);
                }
                private static string _SellerCardNumber_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.SellerCardNumber;
                }
                private static void _SellerCardNumber_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SellerCardNumber = v;
                }
                private static void _SellerCardNumber_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.SellerCardNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    SellerCardExpDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "SellerCardExpDate",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardExpDate_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardExpDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardExpDate_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardExpDate_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardExpDate_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardExpDate_OnValueChanged);
                private static void _SellerCardExpDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._SellerCardExpDate, sf);
                }
                private static bool _SellerCardExpDate_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.SellerCardExpDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _SellerCardExpDate_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SellerCardExpDate_Validate(r);
                }
                private static string _SellerCardExpDate_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.SellerCardExpDate;
                }
                private static void _SellerCardExpDate_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SellerCardExpDate = v;
                }
                private static void _SellerCardExpDate_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.SellerCardExpDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    SellerCardSecurityCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "SellerCardSecurityCode",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardSecurityCode_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardSecurityCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardSecurityCode_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardSecurityCode_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardSecurityCode_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerCardSecurityCode_OnValueChanged);
                private static void _SellerCardSecurityCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._SellerCardSecurityCode, sf);
                }
                private static bool _SellerCardSecurityCode_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.SellerCardSecurityCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _SellerCardSecurityCode_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SellerCardSecurityCode_Validate(r);
                }
                private static string _SellerCardSecurityCode_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.SellerCardSecurityCode;
                }
                private static void _SellerCardSecurityCode_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SellerCardSecurityCode = v;
                }
                private static void _SellerCardSecurityCode_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.SellerCardSecurityCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    SellerPaypalUserId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "SellerPaypalUserId",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerPaypalUserId_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerPaypalUserId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerPaypalUserId_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerPaypalUserId_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerPaypalUserId_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerPaypalUserId_OnValueChanged);
                private static void _SellerPaypalUserId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._SellerPaypalUserId, sf);
                }
                private static bool _SellerPaypalUserId_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.SellerPaypalUserId_IsReadOnly(ref result);
                    return result;
                }
                private static void _SellerPaypalUserId_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SellerPaypalUserId_Validate(r);
                }
                private static string _SellerPaypalUserId_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.SellerPaypalUserId;
                }
                private static void _SellerPaypalUserId_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SellerPaypalUserId = v;
                }
                private static void _SellerPaypalUserId_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.SellerPaypalUserId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    SellerPaypalPassword = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "SellerPaypalPassword",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerPaypalPassword_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerPaypalPassword_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerPaypalPassword_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerPaypalPassword_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerPaypalPassword_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerPaypalPassword_OnValueChanged);
                private static void _SellerPaypalPassword_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._SellerPaypalPassword, sf);
                }
                private static bool _SellerPaypalPassword_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.SellerPaypalPassword_IsReadOnly(ref result);
                    return result;
                }
                private static void _SellerPaypalPassword_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SellerPaypalPassword_Validate(r);
                }
                private static string _SellerPaypalPassword_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.SellerPaypalPassword;
                }
                private static void _SellerPaypalPassword_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SellerPaypalPassword = v;
                }
                private static void _SellerPaypalPassword_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.SellerPaypalPassword_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    SellerReferenceNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "SellerReferenceNumber",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerReferenceNumber_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerReferenceNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerReferenceNumber_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerReferenceNumber_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerReferenceNumber_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._SellerReferenceNumber_OnValueChanged);
                private static void _SellerReferenceNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._SellerReferenceNumber, sf);
                }
                private static bool _SellerReferenceNumber_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.SellerReferenceNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _SellerReferenceNumber_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SellerReferenceNumber_Validate(r);
                }
                private static string _SellerReferenceNumber_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.SellerReferenceNumber;
                }
                private static void _SellerReferenceNumber_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SellerReferenceNumber = v;
                }
                private static void _SellerReferenceNumber_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.SellerReferenceNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    Operateur = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "Operateur",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Operateur_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Operateur_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Operateur_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Operateur_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Operateur_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Operateur_OnValueChanged);
                private static void _Operateur_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Operateur, sf);
                }
                private static bool _Operateur_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Operateur_IsReadOnly(ref result);
                    return result;
                }
                private static void _Operateur_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Operateur_Validate(r);
                }
                private static string _Operateur_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Operateur;
                }
                private static void _Operateur_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Operateur = v;
                }
                private static void _Operateur_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Operateur_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    FlightNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "FlightNumber",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._FlightNumber_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._FlightNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._FlightNumber_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._FlightNumber_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._FlightNumber_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._FlightNumber_OnValueChanged);
                private static void _FlightNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._FlightNumber, sf);
                }
                private static bool _FlightNumber_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.FlightNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _FlightNumber_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FlightNumber_Validate(r);
                }
                private static string _FlightNumber_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.FlightNumber;
                }
                private static void _FlightNumber_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.FlightNumber = v;
                }
                private static void _FlightNumber_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.FlightNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Entry
                    EstimatedTakeoffTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Entry(
                        "EstimatedTakeoffTime",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._EstimatedTakeoffTime_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._EstimatedTakeoffTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._EstimatedTakeoffTime_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._EstimatedTakeoffTime_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._EstimatedTakeoffTime_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._EstimatedTakeoffTime_OnValueChanged);
                private static void _EstimatedTakeoffTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._EstimatedTakeoffTime, sf);
                }
                private static bool _EstimatedTakeoffTime_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.EstimatedTakeoffTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _EstimatedTakeoffTime_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EstimatedTakeoffTime_Validate(r);
                }
                private static global::System.DateTime _EstimatedTakeoffTime_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.EstimatedTakeoffTime;
                }
                private static void _EstimatedTakeoffTime_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.EstimatedTakeoffTime = global::LightSwitchApplication.Order.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _EstimatedTakeoffTime_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.EstimatedTakeoffTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Entry
                    EstimatedLandingTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Entry(
                        "EstimatedLandingTime",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._EstimatedLandingTime_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._EstimatedLandingTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._EstimatedLandingTime_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._EstimatedLandingTime_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._EstimatedLandingTime_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._EstimatedLandingTime_OnValueChanged);
                private static void _EstimatedLandingTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._EstimatedLandingTime, sf);
                }
                private static bool _EstimatedLandingTime_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.EstimatedLandingTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _EstimatedLandingTime_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EstimatedLandingTime_Validate(r);
                }
                private static global::System.DateTime _EstimatedLandingTime_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.EstimatedLandingTime;
                }
                private static void _EstimatedLandingTime_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.EstimatedLandingTime = global::LightSwitchApplication.Order.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _EstimatedLandingTime_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.EstimatedLandingTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    State = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "State",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._State_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._State_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._State_ComputeValue);
                private static void _State_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._State, sf);
                }
                private static void _State_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.State_Validate(r);
                }
                private static string _State_ComputeValue(global::LightSwitchApplication.Order e)
                {
                    string value = default(string);
                    e.State_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry
                    GlobalPivotAmount = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry(
                        "GlobalPivotAmount",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._GlobalPivotAmount_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._GlobalPivotAmount_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._GlobalPivotAmount_ComputeValue);
                private static void _GlobalPivotAmount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._GlobalPivotAmount, sf);
                }
                private static void _GlobalPivotAmount_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.GlobalPivotAmount_Validate(r);
                }
                private static double _GlobalPivotAmount_ComputeValue(global::LightSwitchApplication.Order e)
                {
                    double value = default(double);
                    e.GlobalPivotAmount_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry
                    GlobalPivotAdminFee = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry(
                        "GlobalPivotAdminFee",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._GlobalPivotAdminFee_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._GlobalPivotAdminFee_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._GlobalPivotAdminFee_ComputeValue);
                private static void _GlobalPivotAdminFee_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._GlobalPivotAdminFee, sf);
                }
                private static void _GlobalPivotAdminFee_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.GlobalPivotAdminFee_Validate(r);
                }
                private static double _GlobalPivotAdminFee_ComputeValue(global::LightSwitchApplication.Order e)
                {
                    double value = default(double);
                    e.GlobalPivotAdminFee_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Entry
                    ItemsCount = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Entry(
                        "ItemsCount",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ItemsCount_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ItemsCount_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ItemsCount_ComputeValue);
                private static void _ItemsCount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._ItemsCount, sf);
                }
                private static void _ItemsCount_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ItemsCount_Validate(r);
                }
                private static int _ItemsCount_ComputeValue(global::LightSwitchApplication.Order e)
                {
                    int value = default(int);
                    e.ItemsCount_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.OrderLineItem>.Entry
                    OrderLineItems = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.OrderLineItem>.Entry(
                        "OrderLineItems",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderLineItems_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderLineItems_GetReferencedEntities,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderLineItems_GetEntityCollection);
                private static void _OrderLineItems_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.OrderLineItem>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._OrderLineItems, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.OrderLineItem> _OrderLineItems_GetReferencedEntities(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.OrderLineItem, global::LightSwitchApplication.OrderLineItem.DetailsClass>(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrderLineItems, ref d._OrderLineItems);
                }
                private static global::System.Collections.IEnumerable _OrderLineItems_GetEntityCollection(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.OrderLineItems;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Aircraft>.Entry
                    Aircraft = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Aircraft>.Entry(
                        "Aircraft",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Aircraft_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Aircraft_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Aircraft_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Aircraft_GetCoreImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Aircraft_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Aircraft_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Aircraft_Refresh,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Aircraft_OnValueChanged);
                private static void _Aircraft_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Aircraft>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Aircraft, sf);
                }
                private static bool _Aircraft_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Aircraft_IsReadOnly(ref result);
                    return result;
                }
                private static void _Aircraft_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Aircraft_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Aircraft_GetCoreImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Aircraft;
                }
                private static global::LightSwitchApplication.Aircraft _Aircraft_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Aircraft, global::LightSwitchApplication.Aircraft.DetailsClass>(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Aircraft, ref d._Aircraft);
                }
                private static void _Aircraft_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, global::LightSwitchApplication.Aircraft v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Aircraft, ref d._Aircraft, (i, ev) => i.Aircraft = ev, v);
                }
                private static void _Aircraft_Refresh(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Aircraft, ref d._Aircraft);
                }
                private static void _Aircraft_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Aircraft_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Airport>.Entry
                    LandingAirport = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Airport>.Entry(
                        "LandingAirport",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LandingAirport_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LandingAirport_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LandingAirport_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LandingAirport_GetCoreImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LandingAirport_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LandingAirport_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LandingAirport_Refresh,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LandingAirport_OnValueChanged);
                private static void _LandingAirport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Airport>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._LandingAirport, sf);
                }
                private static bool _LandingAirport_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.LandingAirport_IsReadOnly(ref result);
                    return result;
                }
                private static void _LandingAirport_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LandingAirport_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _LandingAirport_GetCoreImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.LandingAirport;
                }
                private static global::LightSwitchApplication.Airport _LandingAirport_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Airport, global::LightSwitchApplication.Airport.DetailsClass>(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LandingAirport, ref d._LandingAirport);
                }
                private static void _LandingAirport_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, global::LightSwitchApplication.Airport v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LandingAirport, ref d._LandingAirport, (i, ev) => i.LandingAirport = ev, v);
                }
                private static void _LandingAirport_Refresh(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LandingAirport, ref d._LandingAirport);
                }
                private static void _LandingAirport_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.LandingAirport_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Airport>.Entry
                    TakeoffAirport = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Airport>.Entry(
                        "TakeoffAirport",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TakeoffAirport_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TakeoffAirport_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TakeoffAirport_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TakeoffAirport_GetCoreImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TakeoffAirport_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TakeoffAirport_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TakeoffAirport_Refresh,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TakeoffAirport_OnValueChanged);
                private static void _TakeoffAirport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Airport>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._TakeoffAirport, sf);
                }
                private static bool _TakeoffAirport_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.TakeoffAirport_IsReadOnly(ref result);
                    return result;
                }
                private static void _TakeoffAirport_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TakeoffAirport_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _TakeoffAirport_GetCoreImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.TakeoffAirport;
                }
                private static global::LightSwitchApplication.Airport _TakeoffAirport_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Airport, global::LightSwitchApplication.Airport.DetailsClass>(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TakeoffAirport, ref d._TakeoffAirport);
                }
                private static void _TakeoffAirport_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, global::LightSwitchApplication.Airport v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TakeoffAirport, ref d._TakeoffAirport, (i, ev) => i.TakeoffAirport = ev, v);
                }
                private static void _TakeoffAirport_Refresh(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TakeoffAirport, ref d._TakeoffAirport);
                }
                private static void _TakeoffAirport_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.TakeoffAirport_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Contract>.Entry
                    Contract = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Contract>.Entry(
                        "Contract",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Contract_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Contract_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Contract_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Contract_GetCoreImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Contract_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Contract_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Contract_Refresh,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Contract_OnValueChanged);
                private static void _Contract_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Contract>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Contract, sf);
                }
                private static bool _Contract_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Contract_IsReadOnly(ref result);
                    return result;
                }
                private static void _Contract_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Contract_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Contract_GetCoreImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Contract;
                }
                private static global::LightSwitchApplication.Contract _Contract_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass>(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Contract, ref d._Contract);
                }
                private static void _Contract_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, global::LightSwitchApplication.Contract v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Contract, ref d._Contract, (i, ev) => i.Contract = ev, v);
                }
                private static void _Contract_Refresh(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Contract, ref d._Contract);
                }
                private static void _Contract_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Contract_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Trader>.Entry
                    Buyer = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Trader>.Entry(
                        "Buyer",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Buyer_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Buyer_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Buyer_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Buyer_GetCoreImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Buyer_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Buyer_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Buyer_Refresh,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Buyer_OnValueChanged);
                private static void _Buyer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Trader>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Buyer, sf);
                }
                private static bool _Buyer_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Buyer_IsReadOnly(ref result);
                    return result;
                }
                private static void _Buyer_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Buyer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Buyer_GetCoreImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Buyer;
                }
                private static global::LightSwitchApplication.Trader _Buyer_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass>(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Buyer, ref d._Buyer);
                }
                private static void _Buyer_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, global::LightSwitchApplication.Trader v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Buyer, ref d._Buyer, (i, ev) => i.Buyer = ev, v);
                }
                private static void _Buyer_Refresh(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Buyer, ref d._Buyer);
                }
                private static void _Buyer_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Buyer_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Trader>.Entry
                    Seller = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Trader>.Entry(
                        "Seller",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Seller_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Seller_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Seller_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Seller_GetCoreImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Seller_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Seller_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Seller_Refresh,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Seller_OnValueChanged);
                private static void _Seller_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Trader>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Seller, sf);
                }
                private static bool _Seller_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Seller_IsReadOnly(ref result);
                    return result;
                }
                private static void _Seller_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Seller_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Seller_GetCoreImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Seller;
                }
                private static global::LightSwitchApplication.Trader _Seller_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass>(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Seller, ref d._Seller);
                }
                private static void _Seller_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, global::LightSwitchApplication.Trader v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Seller, ref d._Seller, (i, ev) => i.Seller = ev, v);
                }
                private static void _Seller_Refresh(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Seller, ref d._Seller);
                }
                private static void _Seller_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Seller_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Data _OrderDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Data _QuotationDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Data _IsQuoted;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Data _ApprovalDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Data _IsApproved;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Data _FulfilmentDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Data _IsFulfilled;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data _Amount;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data _PivotExchangeRate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data _GlobalPivotExchangeRate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data _AdminFee;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _BuyerCardHolderName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _BuyerCardNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _BuyerCardExpDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _BuyerCardSecurityCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _BuyerPaypalUserId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _BuyerPaypalPassword;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _BuyerReferenceNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _SellerCardHolderName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _SellerCardNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _SellerCardExpDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _SellerCardSecurityCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _SellerPaypalUserId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _SellerPaypalPassword;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _SellerReferenceNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _Operateur;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _FlightNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Data _EstimatedTakeoffTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::System.DateTime>.Data _EstimatedLandingTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _State;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data _GlobalPivotAmount;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data _GlobalPivotAdminFee;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Data _ItemsCount;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.OrderLineItem>.Data _OrderLineItems;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Aircraft>.Data _Aircraft;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Airport>.Data _LandingAirport;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Airport>.Data _TakeoffAirport;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Contract>.Data _Contract;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Trader>.Data _Buyer;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, global::LightSwitchApplication.Trader>.Data _Seller;
            
        }
    
        #endregion
    }
    
    #endregion
}

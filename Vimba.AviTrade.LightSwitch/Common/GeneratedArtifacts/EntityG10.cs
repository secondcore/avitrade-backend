

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Trader : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Trader entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Trader()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Trader(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Trader> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Trader.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Trader_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Trader_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Id);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Account
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Account);
            }
            set
            {
                global::LightSwitchApplication.Trader.DetailsClass.SetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Account, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Account_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Account_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Account_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Trader.DetailsClass.SetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Address);
            }
            set
            {
                global::LightSwitchApplication.Trader.DetailsClass.SetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Address, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Address2);
            }
            set
            {
                global::LightSwitchApplication.Trader.DetailsClass.SetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Address2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string City
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.City);
            }
            set
            {
                global::LightSwitchApplication.Trader.DetailsClass.SetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.City, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Phone
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Phone);
            }
            set
            {
                global::LightSwitchApplication.Trader.DetailsClass.SetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Phone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Phone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Phone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Phone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Email
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Email);
            }
            set
            {
                global::LightSwitchApplication.Trader.DetailsClass.SetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Email, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Email_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Email_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Email_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Contact
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Contact);
            }
            set
            {
                global::LightSwitchApplication.Trader.DetailsClass.SetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Contact, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Fax
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Fax);
            }
            set
            {
                global::LightSwitchApplication.Trader.DetailsClass.SetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Fax, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int CurrentInvoiceCounter
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.CurrentInvoiceCounter);
            }
            set
            {
                global::LightSwitchApplication.Trader.DetailsClass.SetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.CurrentInvoiceCounter, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentInvoiceCounter_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentInvoiceCounter_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentInvoiceCounter_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CountryId
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.CountryId);
            }
            set
            {
                global::LightSwitchApplication.Trader.DetailsClass.SetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.CountryId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.RowVersion);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Contract> TraderOneContracts
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderOneContracts);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Contract> TraderOneContractsQuery
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetQuery(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderOneContracts);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Contract> TraderTwoContracts
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderTwoContracts);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Contract> TraderTwoContractsQuery
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetQuery(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderTwoContracts);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.CreditCard> CreditCards
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.CreditCards);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.CreditCard> CreditCardsQuery
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetQuery(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.CreditCards);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Order> BuyerOrders
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.BuyerOrders);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Order> BuyerOrdersQuery
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetQuery(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.BuyerOrders);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Order> TraderOrders
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderOrders);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Order> TraderOrdersQuery
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetQuery(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderOrders);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TraderRegistrationToken> TraderRegistrationTokens
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetValue(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderRegistrationTokens);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TraderRegistrationToken> TraderRegistrationTokensQuery
        {
            get
            {
                return global::LightSwitchApplication.Trader.DetailsClass.GetQuery(this, global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderRegistrationTokens);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Trader,
                global::LightSwitchApplication.Trader.DetailsClass,
                global::LightSwitchApplication.Trader.DetailsClass.IImplementation,
                global::LightSwitchApplication.Trader.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass>.Entry
                __TraderEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass>.Entry(
                    global::LightSwitchApplication.Trader.DetailsClass.__Trader_CreateNew,
                    global::LightSwitchApplication.Trader.DetailsClass.__Trader_Created,
                    global::LightSwitchApplication.Trader.DetailsClass.__Trader_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Trader __Trader_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Trader> es)
            {
                return new global::LightSwitchApplication.Trader(es);
            }
            private static void __Trader_Created(global::LightSwitchApplication.Trader e)
            {
                e.Trader_Created();
            }
            private static bool __Trader_AllowSaveWithErrors(global::LightSwitchApplication.Trader e)
            {
                bool result = false;
                e.Trader_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Trader.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string> Account
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Account) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string> Address
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Address) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string> Address2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Address2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string> City
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.City) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string> Phone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Phone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string> Email
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Email) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string> Contact
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Contact) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string> Fax
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.Fax) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, int> CurrentInvoiceCounter
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.CurrentInvoiceCounter) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string> CountryId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.CountryId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Contract> TraderOneContracts
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderOneContracts) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Contract>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Contract> TraderTwoContracts
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderTwoContracts) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Contract>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.CreditCard> CreditCards
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.CreditCards) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.CreditCard>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Order> BuyerOrders
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.BuyerOrders) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Order>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Order> TraderOrders
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderOrders) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Order>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.TraderRegistrationToken> TraderRegistrationTokens
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderRegistrationTokens) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.TraderRegistrationToken>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; }
                new string Account { get; set; }
                new string Name { get; set; }
                new string Address { get; set; }
                new string Address2 { get; set; }
                new string City { get; set; }
                new string Phone { get; set; }
                new string Email { get; set; }
                new string Contact { get; set; }
                new string Fax { get; set; }
                new int CurrentInvoiceCounter { get; set; }
                new string CountryId { get; set; }
                new byte[] RowVersion { get; }
                new global::System.Collections.IEnumerable TraderOneContracts { get; }
                new global::System.Collections.IEnumerable TraderTwoContracts { get; }
                new global::System.Collections.IEnumerable CreditCards { get; }
                new global::System.Collections.IEnumerable BuyerOrders { get; }
                new global::System.Collections.IEnumerable TraderOrders { get; }
                new global::System.Collections.IEnumerable TraderRegistrationTokens { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, int>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Trader e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Trader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Trader e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry
                    Account = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry(
                        "Account",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Account_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Account_ComputeIsReadOnly,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Account_Validate,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Account_GetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Account_SetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Account_OnValueChanged);
                private static void _Account_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._Account, sf);
                }
                private static bool _Account_ComputeIsReadOnly(global::LightSwitchApplication.Trader e)
                {
                    bool result = false;
                    e.Account_IsReadOnly(ref result);
                    return result;
                }
                private static void _Account_Validate(global::LightSwitchApplication.Trader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Account_Validate(r);
                }
                private static string _Account_GetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.Account;
                }
                private static void _Account_SetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Account = v;
                }
                private static void _Account_OnValueChanged(global::LightSwitchApplication.Trader e)
                {
                    e.Account_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Trader e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Trader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Trader e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry
                    Address = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry(
                        "Address",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Address_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Address_ComputeIsReadOnly,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Address_Validate,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Address_GetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Address_SetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Address_OnValueChanged);
                private static void _Address_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._Address, sf);
                }
                private static bool _Address_ComputeIsReadOnly(global::LightSwitchApplication.Trader e)
                {
                    bool result = false;
                    e.Address_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address_Validate(global::LightSwitchApplication.Trader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address_Validate(r);
                }
                private static string _Address_GetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.Address;
                }
                private static void _Address_SetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address = v;
                }
                private static void _Address_OnValueChanged(global::LightSwitchApplication.Trader e)
                {
                    e.Address_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry
                    Address2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry(
                        "Address2",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Address2_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Address2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Address2_Validate,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Address2_GetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Address2_SetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Address2_OnValueChanged);
                private static void _Address2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2, sf);
                }
                private static bool _Address2_ComputeIsReadOnly(global::LightSwitchApplication.Trader e)
                {
                    bool result = false;
                    e.Address2_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Validate(global::LightSwitchApplication.Trader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Validate(r);
                }
                private static string _Address2_GetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2;
                }
                private static void _Address2_SetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2 = v;
                }
                private static void _Address2_OnValueChanged(global::LightSwitchApplication.Trader e)
                {
                    e.Address2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry
                    City = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry(
                        "City",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._City_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._City_ComputeIsReadOnly,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._City_Validate,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._City_GetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._City_SetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._City_OnValueChanged);
                private static void _City_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._City, sf);
                }
                private static bool _City_ComputeIsReadOnly(global::LightSwitchApplication.Trader e)
                {
                    bool result = false;
                    e.City_IsReadOnly(ref result);
                    return result;
                }
                private static void _City_Validate(global::LightSwitchApplication.Trader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.City_Validate(r);
                }
                private static string _City_GetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.City;
                }
                private static void _City_SetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.City = v;
                }
                private static void _City_OnValueChanged(global::LightSwitchApplication.Trader e)
                {
                    e.City_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry
                    Phone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry(
                        "Phone",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Phone_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Phone_ComputeIsReadOnly,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Phone_Validate,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Phone_GetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Phone_SetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Phone_OnValueChanged);
                private static void _Phone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._Phone, sf);
                }
                private static bool _Phone_ComputeIsReadOnly(global::LightSwitchApplication.Trader e)
                {
                    bool result = false;
                    e.Phone_IsReadOnly(ref result);
                    return result;
                }
                private static void _Phone_Validate(global::LightSwitchApplication.Trader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Phone_Validate(r);
                }
                private static string _Phone_GetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.Phone;
                }
                private static void _Phone_SetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Phone = v;
                }
                private static void _Phone_OnValueChanged(global::LightSwitchApplication.Trader e)
                {
                    e.Phone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry
                    Email = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry(
                        "Email",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Email_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Email_ComputeIsReadOnly,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Email_Validate,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Email_GetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Email_SetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Email_OnValueChanged);
                private static void _Email_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._Email, sf);
                }
                private static bool _Email_ComputeIsReadOnly(global::LightSwitchApplication.Trader e)
                {
                    bool result = false;
                    e.Email_IsReadOnly(ref result);
                    return result;
                }
                private static void _Email_Validate(global::LightSwitchApplication.Trader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Email_Validate(r);
                }
                private static string _Email_GetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.Email;
                }
                private static void _Email_SetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Email = v;
                }
                private static void _Email_OnValueChanged(global::LightSwitchApplication.Trader e)
                {
                    e.Email_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry
                    Contact = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry(
                        "Contact",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Contact_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Contact_ComputeIsReadOnly,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Contact_Validate,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Contact_GetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Contact_SetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Contact_OnValueChanged);
                private static void _Contact_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._Contact, sf);
                }
                private static bool _Contact_ComputeIsReadOnly(global::LightSwitchApplication.Trader e)
                {
                    bool result = false;
                    e.Contact_IsReadOnly(ref result);
                    return result;
                }
                private static void _Contact_Validate(global::LightSwitchApplication.Trader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Contact_Validate(r);
                }
                private static string _Contact_GetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.Contact;
                }
                private static void _Contact_SetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Contact = v;
                }
                private static void _Contact_OnValueChanged(global::LightSwitchApplication.Trader e)
                {
                    e.Contact_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry
                    Fax = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry(
                        "Fax",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Fax_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Fax_ComputeIsReadOnly,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Fax_Validate,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Fax_GetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Fax_SetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._Fax_OnValueChanged);
                private static void _Fax_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._Fax, sf);
                }
                private static bool _Fax_ComputeIsReadOnly(global::LightSwitchApplication.Trader e)
                {
                    bool result = false;
                    e.Fax_IsReadOnly(ref result);
                    return result;
                }
                private static void _Fax_Validate(global::LightSwitchApplication.Trader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Fax_Validate(r);
                }
                private static string _Fax_GetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.Fax;
                }
                private static void _Fax_SetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Fax = v;
                }
                private static void _Fax_OnValueChanged(global::LightSwitchApplication.Trader e)
                {
                    e.Fax_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, int>.Entry
                    CurrentInvoiceCounter = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, int>.Entry(
                        "CurrentInvoiceCounter",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CurrentInvoiceCounter_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CurrentInvoiceCounter_ComputeIsReadOnly,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CurrentInvoiceCounter_Validate,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CurrentInvoiceCounter_GetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CurrentInvoiceCounter_SetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CurrentInvoiceCounter_OnValueChanged);
                private static void _CurrentInvoiceCounter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, int>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._CurrentInvoiceCounter, sf);
                }
                private static bool _CurrentInvoiceCounter_ComputeIsReadOnly(global::LightSwitchApplication.Trader e)
                {
                    bool result = false;
                    e.CurrentInvoiceCounter_IsReadOnly(ref result);
                    return result;
                }
                private static void _CurrentInvoiceCounter_Validate(global::LightSwitchApplication.Trader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CurrentInvoiceCounter_Validate(r);
                }
                private static int _CurrentInvoiceCounter_GetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.CurrentInvoiceCounter;
                }
                private static void _CurrentInvoiceCounter_SetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d, int v)
                {
                    d.ImplementationEntity.CurrentInvoiceCounter = v;
                }
                private static void _CurrentInvoiceCounter_OnValueChanged(global::LightSwitchApplication.Trader e)
                {
                    e.CurrentInvoiceCounter_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry
                    CountryId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Entry(
                        "CountryId",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CountryId_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CountryId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CountryId_Validate,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CountryId_GetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CountryId_SetImplementationValue,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CountryId_OnValueChanged);
                private static void _CountryId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._CountryId, sf);
                }
                private static bool _CountryId_ComputeIsReadOnly(global::LightSwitchApplication.Trader e)
                {
                    bool result = false;
                    e.CountryId_IsReadOnly(ref result);
                    return result;
                }
                private static void _CountryId_Validate(global::LightSwitchApplication.Trader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CountryId_Validate(r);
                }
                private static string _CountryId_GetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.CountryId;
                }
                private static void _CountryId_SetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CountryId = v;
                }
                private static void _CountryId_OnValueChanged(global::LightSwitchApplication.Trader e)
                {
                    e.CountryId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Trader e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Trader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Trader e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Contract>.Entry
                    TraderOneContracts = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Contract>.Entry(
                        "TraderOneContracts",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._TraderOneContracts_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._TraderOneContracts_GetReferencedEntities,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._TraderOneContracts_GetEntityCollection);
                private static void _TraderOneContracts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Contract>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._TraderOneContracts, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contract> _TraderOneContracts_GetReferencedEntities(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass>(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderOneContracts, ref d._TraderOneContracts);
                }
                private static global::System.Collections.IEnumerable _TraderOneContracts_GetEntityCollection(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.TraderOneContracts;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Contract>.Entry
                    TraderTwoContracts = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Contract>.Entry(
                        "TraderTwoContracts",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._TraderTwoContracts_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._TraderTwoContracts_GetReferencedEntities,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._TraderTwoContracts_GetEntityCollection);
                private static void _TraderTwoContracts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Contract>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._TraderTwoContracts, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contract> _TraderTwoContracts_GetReferencedEntities(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Contract, global::LightSwitchApplication.Contract.DetailsClass>(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderTwoContracts, ref d._TraderTwoContracts);
                }
                private static global::System.Collections.IEnumerable _TraderTwoContracts_GetEntityCollection(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.TraderTwoContracts;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.CreditCard>.Entry
                    CreditCards = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.CreditCard>.Entry(
                        "CreditCards",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CreditCards_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CreditCards_GetReferencedEntities,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._CreditCards_GetEntityCollection);
                private static void _CreditCards_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.CreditCard>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._CreditCards, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CreditCard> _CreditCards_GetReferencedEntities(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.CreditCard, global::LightSwitchApplication.CreditCard.DetailsClass>(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.CreditCards, ref d._CreditCards);
                }
                private static global::System.Collections.IEnumerable _CreditCards_GetEntityCollection(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.CreditCards;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Order>.Entry
                    BuyerOrders = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Order>.Entry(
                        "BuyerOrders",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._BuyerOrders_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._BuyerOrders_GetReferencedEntities,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._BuyerOrders_GetEntityCollection);
                private static void _BuyerOrders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Order>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._BuyerOrders, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order> _BuyerOrders_GetReferencedEntities(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.BuyerOrders, ref d._BuyerOrders);
                }
                private static global::System.Collections.IEnumerable _BuyerOrders_GetEntityCollection(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.BuyerOrders;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Order>.Entry
                    TraderOrders = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Order>.Entry(
                        "TraderOrders",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._TraderOrders_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._TraderOrders_GetReferencedEntities,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._TraderOrders_GetEntityCollection);
                private static void _TraderOrders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Order>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._TraderOrders, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order> _TraderOrders_GetReferencedEntities(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderOrders, ref d._TraderOrders);
                }
                private static global::System.Collections.IEnumerable _TraderOrders_GetEntityCollection(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.TraderOrders;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.TraderRegistrationToken>.Entry
                    TraderRegistrationTokens = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.TraderRegistrationToken>.Entry(
                        "TraderRegistrationTokens",
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._TraderRegistrationTokens_Stub,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._TraderRegistrationTokens_GetReferencedEntities,
                        global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties._TraderRegistrationTokens_GetEntityCollection);
                private static void _TraderRegistrationTokens_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Trader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.TraderRegistrationToken>.Data> c, global::LightSwitchApplication.Trader.DetailsClass d, object sf)
                {
                    c(d, ref d._TraderRegistrationTokens, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TraderRegistrationToken> _TraderRegistrationTokens_GetReferencedEntities(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TraderRegistrationToken, global::LightSwitchApplication.TraderRegistrationToken.DetailsClass>(global::LightSwitchApplication.Trader.DetailsClass.PropertySetProperties.TraderRegistrationTokens, ref d._TraderRegistrationTokens);
                }
                private static global::System.Collections.IEnumerable _TraderRegistrationTokens_GetEntityCollection(global::LightSwitchApplication.Trader.DetailsClass d)
                {
                    return d.ImplementationEntity.TraderRegistrationTokens;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data _Account;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data _Address;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data _Address2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data _City;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data _Phone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data _Email;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data _Contact;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data _Fax;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, int>.Data _CurrentInvoiceCounter;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, string>.Data _CountryId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Contract>.Data _TraderOneContracts;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Contract>.Data _TraderTwoContracts;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.CreditCard>.Data _CreditCards;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Order>.Data _BuyerOrders;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.Order>.Data _TraderOrders;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Trader, global::LightSwitchApplication.Trader.DetailsClass, global::LightSwitchApplication.TraderRegistrationToken>.Data _TraderRegistrationTokens;
            
        }
    
        #endregion
    }
    
    #endregion
}

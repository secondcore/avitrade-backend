//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Contracts_Instances_InstanceId", "Instances", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AviTradeOLTPData.Implementation.Instance), "Contracts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.Contract), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Contracts_Traders_TraderOneId", "Traders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AviTradeOLTPData.Implementation.Trader), "Contracts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.Contract), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Contracts_Traders_TraderTwoId", "Traders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AviTradeOLTPData.Implementation.Trader), "Contracts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.Contract), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CreditCards_Traders_TraderId", "Traders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AviTradeOLTPData.Implementation.Trader), "CreditCards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.CreditCard), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderLineItems_Items_ItemId", "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AviTradeOLTPData.Implementation.Item), "OrderLineItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.OrderLineItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderLineItems_Orders_OrderId", "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AviTradeOLTPData.Implementation.Order), "OrderLineItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.OrderLineItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Orders_Aircraft_AircraftId", "Aircraft", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AviTradeOLTPData.Implementation.Aircraft), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.Order), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Orders_Airports_LandingAirportId", "Airports", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AviTradeOLTPData.Implementation.Airport), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.Order), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Orders_Airports_TakeoffAirportId", "Airports", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AviTradeOLTPData.Implementation.Airport), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.Order), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Orders_Contracts_ContractId", "Contracts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AviTradeOLTPData.Implementation.Contract), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.Order), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Orders_Traders_BuyerId", "Traders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AviTradeOLTPData.Implementation.Trader), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.Order), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Orders_Traders_SellerId", "Traders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AviTradeOLTPData.Implementation.Trader), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.Order), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Users_Groups_GroupId", "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AviTradeOLTPData.Implementation.Group), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.User), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_TraderRegistrationTokens_Traders_TraderId", "Traders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AviTradeOLTPData.Implementation.Trader), "TraderRegistrationTokens", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.TraderRegistrationToken), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_UserConfigurationItems_Users_UserId", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AviTradeOLTPData.Implementation.User), "UserConfigurationItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AviTradeOLTPData.Implementation.UserConfigurationItem), true)]

#endregion

namespace AviTradeOLTPData.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AviTradeOLTPDataObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AviTradeOLTPDataObjectContext object using the connection string found in the 'AviTradeOLTPDataObjectContext' section of the application configuration file.
        /// </summary>
        public AviTradeOLTPDataObjectContext() : base("name=AviTradeOLTPDataObjectContext", "AviTradeOLTPDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AviTradeOLTPDataObjectContext object.
        /// </summary>
        public AviTradeOLTPDataObjectContext(string connectionString) : base(connectionString, "AviTradeOLTPDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AviTradeOLTPDataObjectContext object.
        /// </summary>
        public AviTradeOLTPDataObjectContext(EntityConnection connection) : base(connection, "AviTradeOLTPDataObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Aircraft> Aircraft
        {
            get
            {
                if ((_Aircraft == null))
                {
                    _Aircraft = base.CreateObjectSet<Aircraft>("Aircraft");
                }
                return _Aircraft;
            }
        }
        private ObjectSet<Aircraft> _Aircraft;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Airport> Airports
        {
            get
            {
                if ((_Airports == null))
                {
                    _Airports = base.CreateObjectSet<Airport>("Airports");
                }
                return _Airports;
            }
        }
        private ObjectSet<Airport> _Airports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contract> Contracts
        {
            get
            {
                if ((_Contracts == null))
                {
                    _Contracts = base.CreateObjectSet<Contract>("Contracts");
                }
                return _Contracts;
            }
        }
        private ObjectSet<Contract> _Contracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CreditCard> CreditCards
        {
            get
            {
                if ((_CreditCards == null))
                {
                    _CreditCards = base.CreateObjectSet<CreditCard>("CreditCards");
                }
                return _CreditCards;
            }
        }
        private ObjectSet<CreditCard> _CreditCards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Instance> Instances
        {
            get
            {
                if ((_Instances == null))
                {
                    _Instances = base.CreateObjectSet<Instance>("Instances");
                }
                return _Instances;
            }
        }
        private ObjectSet<Instance> _Instances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderLineItem> OrderLineItems
        {
            get
            {
                if ((_OrderLineItems == null))
                {
                    _OrderLineItems = base.CreateObjectSet<OrderLineItem>("OrderLineItems");
                }
                return _OrderLineItems;
            }
        }
        private ObjectSet<OrderLineItem> _OrderLineItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Trader> Traders
        {
            get
            {
                if ((_Traders == null))
                {
                    _Traders = base.CreateObjectSet<Trader>("Traders");
                }
                return _Traders;
            }
        }
        private ObjectSet<Trader> _Traders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TraderRegistrationToken> TraderRegistrationTokens
        {
            get
            {
                if ((_TraderRegistrationTokens == null))
                {
                    _TraderRegistrationTokens = base.CreateObjectSet<TraderRegistrationToken>("TraderRegistrationTokens");
                }
                return _TraderRegistrationTokens;
            }
        }
        private ObjectSet<TraderRegistrationToken> _TraderRegistrationTokens;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserConfigurationItem> UserConfigurationItems
        {
            get
            {
                if ((_UserConfigurationItems == null))
                {
                    _UserConfigurationItems = base.CreateObjectSet<UserConfigurationItem>("UserConfigurationItems");
                }
                return _UserConfigurationItems;
            }
        }
        private ObjectSet<UserConfigurationItem> _UserConfigurationItems;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Aircraft EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAircraft(Aircraft aircraft)
        {
            base.AddObject("Aircraft", aircraft);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Airports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAirports(Airport airport)
        {
            base.AddObject("Airports", airport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContracts(Contract contract)
        {
            base.AddObject("Contracts", contract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CreditCards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCreditCards(CreditCard creditCard)
        {
            base.AddObject("CreditCards", creditCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Instances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstances(Instance instance)
        {
            base.AddObject("Instances", instance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderLineItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderLineItems(OrderLineItem orderLineItem)
        {
            base.AddObject("OrderLineItems", orderLineItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Traders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTraders(Trader trader)
        {
            base.AddObject("Traders", trader);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TraderRegistrationTokens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTraderRegistrationTokens(TraderRegistrationToken traderRegistrationToken)
        {
            base.AddObject("TraderRegistrationTokens", traderRegistrationToken);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserConfigurationItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserConfigurationItems(UserConfigurationItem userConfigurationItem)
        {
            base.AddObject("UserConfigurationItems", userConfigurationItem);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Aircraft")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Aircraft : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Aircraft object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Aircraft CreateAircraft(global::System.Int32 id)
        {
            Aircraft aircraft = new Aircraft();
            aircraft.Id = id;
            return aircraft;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manufacturer
        {
            get
            {
                return _Manufacturer;
            }
            set
            {
                OnManufacturerChanging(value);
                ReportPropertyChanging("Manufacturer");
                _Manufacturer = value;
                ReportPropertyChanged("Manufacturer");
                OnManufacturerChanged();
            }
        }
        private global::System.String _Manufacturer;
        partial void OnManufacturerChanging(global::System.String value);
        partial void OnManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = value;
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Orders_Aircraft_AircraftId", "Orders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("LightSwitchApplication.FK_Orders_Aircraft_AircraftId", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("LightSwitchApplication.FK_Orders_Aircraft_AircraftId", "Orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Airport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Airport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Airport object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        public static Airport CreateAirport(global::System.Int32 id, global::System.String countryId)
        {
            Airport airport = new Airport();
            airport.Id = id;
            airport.CountryId = countryId;
            return airport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = value;
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = value;
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.String _CountryId;
        partial void OnCountryIdChanging(global::System.String value);
        partial void OnCountryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Orders_Airports_LandingAirportId", "Orders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("LightSwitchApplication.FK_Orders_Airports_LandingAirportId", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("LightSwitchApplication.FK_Orders_Airports_LandingAirportId", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Orders_Airports_TakeoffAirportId", "Orders")]
        public EntityCollection<Order> Orders1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("LightSwitchApplication.FK_Orders_Airports_TakeoffAirportId", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("LightSwitchApplication.FK_Orders_Airports_TakeoffAirportId", "Orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Contract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contract object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="traderOneApprovalDate">Initial value of the TraderOneApprovalDate property.</param>
        /// <param name="traderTwoApprovalDate">Initial value of the TraderTwoApprovalDate property.</param>
        /// <param name="isTraderOneApproved">Initial value of the IsTraderOneApproved property.</param>
        /// <param name="isTraderTwoApproved">Initial value of the IsTraderTwoApproved property.</param>
        /// <param name="billingCurrencyId">Initial value of the BillingCurrencyId property.</param>
        /// <param name="timeZoneId">Initial value of the TimeZoneId property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="traderOneId">Initial value of the TraderOneId property.</param>
        /// <param name="traderTwoId">Initial value of the TraderTwoId property.</param>
        public static Contract CreateContract(global::System.Int32 id, global::System.DateTime createDate, global::System.DateTime startDate, global::System.DateTime endDate, global::System.DateTime traderOneApprovalDate, global::System.DateTime traderTwoApprovalDate, global::System.Boolean isTraderOneApproved, global::System.Boolean isTraderTwoApproved, global::System.String billingCurrencyId, global::System.Int32 timeZoneId, global::System.Byte[] rowVersion, global::System.Int32 instanceId, global::System.Int32 traderOneId, global::System.Int32 traderTwoId)
        {
            Contract contract = new Contract();
            contract.Id = id;
            contract.CreateDate = createDate;
            contract.StartDate = startDate;
            contract.EndDate = endDate;
            contract.TraderOneApprovalDate = traderOneApprovalDate;
            contract.TraderTwoApprovalDate = traderTwoApprovalDate;
            contract.IsTraderOneApproved = isTraderOneApproved;
            contract.IsTraderTwoApproved = isTraderTwoApproved;
            contract.BillingCurrencyId = billingCurrencyId;
            contract.TimeZoneId = timeZoneId;
            contract.RowVersion = rowVersion;
            contract.InstanceId = instanceId;
            contract.TraderOneId = traderOneId;
            contract.TraderTwoId = traderTwoId;
            return contract;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = value;
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = value;
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = value;
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TraderOneApprovalDate
        {
            get
            {
                return _TraderOneApprovalDate;
            }
            set
            {
                OnTraderOneApprovalDateChanging(value);
                ReportPropertyChanging("TraderOneApprovalDate");
                _TraderOneApprovalDate = value;
                ReportPropertyChanged("TraderOneApprovalDate");
                OnTraderOneApprovalDateChanged();
            }
        }
        private global::System.DateTime _TraderOneApprovalDate;
        partial void OnTraderOneApprovalDateChanging(global::System.DateTime value);
        partial void OnTraderOneApprovalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TraderTwoApprovalDate
        {
            get
            {
                return _TraderTwoApprovalDate;
            }
            set
            {
                OnTraderTwoApprovalDateChanging(value);
                ReportPropertyChanging("TraderTwoApprovalDate");
                _TraderTwoApprovalDate = value;
                ReportPropertyChanged("TraderTwoApprovalDate");
                OnTraderTwoApprovalDateChanged();
            }
        }
        private global::System.DateTime _TraderTwoApprovalDate;
        partial void OnTraderTwoApprovalDateChanging(global::System.DateTime value);
        partial void OnTraderTwoApprovalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTraderOneApproved
        {
            get
            {
                return _IsTraderOneApproved;
            }
            set
            {
                OnIsTraderOneApprovedChanging(value);
                ReportPropertyChanging("IsTraderOneApproved");
                _IsTraderOneApproved = value;
                ReportPropertyChanged("IsTraderOneApproved");
                OnIsTraderOneApprovedChanged();
            }
        }
        private global::System.Boolean _IsTraderOneApproved;
        partial void OnIsTraderOneApprovedChanging(global::System.Boolean value);
        partial void OnIsTraderOneApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTraderTwoApproved
        {
            get
            {
                return _IsTraderTwoApproved;
            }
            set
            {
                OnIsTraderTwoApprovedChanging(value);
                ReportPropertyChanging("IsTraderTwoApproved");
                _IsTraderTwoApproved = value;
                ReportPropertyChanged("IsTraderTwoApproved");
                OnIsTraderTwoApprovedChanged();
            }
        }
        private global::System.Boolean _IsTraderTwoApproved;
        partial void OnIsTraderTwoApprovedChanging(global::System.Boolean value);
        partial void OnIsTraderTwoApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BillingCurrencyId
        {
            get
            {
                return _BillingCurrencyId;
            }
            set
            {
                OnBillingCurrencyIdChanging(value);
                ReportPropertyChanging("BillingCurrencyId");
                _BillingCurrencyId = value;
                ReportPropertyChanged("BillingCurrencyId");
                OnBillingCurrencyIdChanged();
            }
        }
        private global::System.String _BillingCurrencyId;
        partial void OnBillingCurrencyIdChanging(global::System.String value);
        partial void OnBillingCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TimeZoneId
        {
            get
            {
                return _TimeZoneId;
            }
            set
            {
                OnTimeZoneIdChanging(value);
                ReportPropertyChanging("TimeZoneId");
                _TimeZoneId = value;
                ReportPropertyChanged("TimeZoneId");
                OnTimeZoneIdChanged();
            }
        }
        private global::System.Int32 _TimeZoneId;
        partial void OnTimeZoneIdChanging(global::System.Int32 value);
        partial void OnTimeZoneIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                OnInstanceIdChanging(value);
                ReportPropertyChanging("InstanceId");
                _InstanceId = value;
                ReportPropertyChanged("InstanceId");
                OnInstanceIdChanged();
            }
        }
        private global::System.Int32 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int32 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TraderOneId
        {
            get
            {
                return _TraderOneId;
            }
            set
            {
                OnTraderOneIdChanging(value);
                ReportPropertyChanging("TraderOneId");
                _TraderOneId = value;
                ReportPropertyChanged("TraderOneId");
                OnTraderOneIdChanged();
            }
        }
        private global::System.Int32 _TraderOneId;
        partial void OnTraderOneIdChanging(global::System.Int32 value);
        partial void OnTraderOneIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TraderTwoId
        {
            get
            {
                return _TraderTwoId;
            }
            set
            {
                OnTraderTwoIdChanging(value);
                ReportPropertyChanging("TraderTwoId");
                _TraderTwoId = value;
                ReportPropertyChanged("TraderTwoId");
                OnTraderTwoIdChanged();
            }
        }
        private global::System.Int32 _TraderTwoId;
        partial void OnTraderTwoIdChanging(global::System.Int32 value);
        partial void OnTraderTwoIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Contracts_Instances_InstanceId", "Instances")]
        public Instance Instance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("LightSwitchApplication.FK_Contracts_Instances_InstanceId", "Instances").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("LightSwitchApplication.FK_Contracts_Instances_InstanceId", "Instances").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Instance> InstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("LightSwitchApplication.FK_Contracts_Instances_InstanceId", "Instances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Instance>("LightSwitchApplication.FK_Contracts_Instances_InstanceId", "Instances", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Contracts_Traders_TraderOneId", "Traders")]
        public Trader TraderOne
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_Contracts_Traders_TraderOneId", "Traders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_Contracts_Traders_TraderOneId", "Traders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trader> TraderOneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_Contracts_Traders_TraderOneId", "Traders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trader>("LightSwitchApplication.FK_Contracts_Traders_TraderOneId", "Traders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Contracts_Traders_TraderTwoId", "Traders")]
        public Trader TraderTwo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_Contracts_Traders_TraderTwoId", "Traders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_Contracts_Traders_TraderTwoId", "Traders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trader> TraderTwoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_Contracts_Traders_TraderTwoId", "Traders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trader>("LightSwitchApplication.FK_Contracts_Traders_TraderTwoId", "Traders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Orders_Contracts_ContractId", "Orders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("LightSwitchApplication.FK_Orders_Contracts_ContractId", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("LightSwitchApplication.FK_Orders_Contracts_ContractId", "Orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="CreditCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CreditCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CreditCard object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="traderId">Initial value of the TraderId property.</param>
        public static CreditCard CreateCreditCard(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.Int32 traderId)
        {
            CreditCard creditCard = new CreditCard();
            creditCard.Id = id;
            creditCard.RowVersion = rowVersion;
            creditCard.TraderId = traderId;
            return creditCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HolderName
        {
            get
            {
                return _HolderName;
            }
            set
            {
                OnHolderNameChanging(value);
                ReportPropertyChanging("HolderName");
                _HolderName = value;
                ReportPropertyChanged("HolderName");
                OnHolderNameChanged();
            }
        }
        private global::System.String _HolderName;
        partial void OnHolderNameChanging(global::System.String value);
        partial void OnHolderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardNumber
        {
            get
            {
                return _CardNumber;
            }
            set
            {
                OnCardNumberChanging(value);
                ReportPropertyChanging("CardNumber");
                _CardNumber = value;
                ReportPropertyChanged("CardNumber");
                OnCardNumberChanged();
            }
        }
        private global::System.String _CardNumber;
        partial void OnCardNumberChanging(global::System.String value);
        partial void OnCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExpDate
        {
            get
            {
                return _ExpDate;
            }
            set
            {
                OnExpDateChanging(value);
                ReportPropertyChanging("ExpDate");
                _ExpDate = value;
                ReportPropertyChanged("ExpDate");
                OnExpDateChanged();
            }
        }
        private global::System.String _ExpDate;
        partial void OnExpDateChanging(global::System.String value);
        partial void OnExpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityCode
        {
            get
            {
                return _SecurityCode;
            }
            set
            {
                OnSecurityCodeChanging(value);
                ReportPropertyChanging("SecurityCode");
                _SecurityCode = value;
                ReportPropertyChanged("SecurityCode");
                OnSecurityCodeChanged();
            }
        }
        private global::System.String _SecurityCode;
        partial void OnSecurityCodeChanging(global::System.String value);
        partial void OnSecurityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TraderId
        {
            get
            {
                return _TraderId;
            }
            set
            {
                OnTraderIdChanging(value);
                ReportPropertyChanging("TraderId");
                _TraderId = value;
                ReportPropertyChanged("TraderId");
                OnTraderIdChanged();
            }
        }
        private global::System.Int32 _TraderId;
        partial void OnTraderIdChanging(global::System.Int32 value);
        partial void OnTraderIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CreditCards_Traders_TraderId", "Traders")]
        public Trader Trader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_CreditCards_Traders_TraderId", "Traders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_CreditCards_Traders_TraderId", "Traders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trader> TraderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_CreditCards_Traders_TraderId", "Traders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trader>("LightSwitchApplication.FK_CreditCards_Traders_TraderId", "Traders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static Group CreateGroup(global::System.String id, global::System.Byte[] rowVersion)
        {
            Group group = new Group();
            group.Id = id;
            group.RowVersion = rowVersion;
            return group;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Users_Groups_GroupId", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("LightSwitchApplication.FK_Users_Groups_GroupId", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("LightSwitchApplication.FK_Users_Groups_GroupId", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Instance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Instance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Instance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="adminFeePercentage">Initial value of the AdminFeePercentage property.</param>
        /// <param name="pivotCurrencyId">Initial value of the PivotCurrencyId property.</param>
        /// <param name="globalPivotCurrencyId">Initial value of the GlobalPivotCurrencyId property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static Instance CreateInstance(global::System.Int32 id, global::System.Double adminFeePercentage, global::System.String pivotCurrencyId, global::System.String globalPivotCurrencyId, global::System.Byte[] rowVersion)
        {
            Instance instance = new Instance();
            instance.Id = id;
            instance.AdminFeePercentage = adminFeePercentage;
            instance.PivotCurrencyId = pivotCurrencyId;
            instance.GlobalPivotCurrencyId = globalPivotCurrencyId;
            instance.RowVersion = rowVersion;
            return instance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Industry
        {
            get
            {
                return _Industry;
            }
            set
            {
                OnIndustryChanging(value);
                ReportPropertyChanging("Industry");
                _Industry = value;
                ReportPropertyChanged("Industry");
                OnIndustryChanged();
            }
        }
        private global::System.String _Industry;
        partial void OnIndustryChanging(global::System.String value);
        partial void OnIndustryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AdminFeePercentage
        {
            get
            {
                return _AdminFeePercentage;
            }
            set
            {
                OnAdminFeePercentageChanging(value);
                ReportPropertyChanging("AdminFeePercentage");
                _AdminFeePercentage = value;
                ReportPropertyChanged("AdminFeePercentage");
                OnAdminFeePercentageChanged();
            }
        }
        private global::System.Double _AdminFeePercentage;
        partial void OnAdminFeePercentageChanging(global::System.Double value);
        partial void OnAdminFeePercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PivotCurrencyId
        {
            get
            {
                return _PivotCurrencyId;
            }
            set
            {
                OnPivotCurrencyIdChanging(value);
                ReportPropertyChanging("PivotCurrencyId");
                _PivotCurrencyId = value;
                ReportPropertyChanged("PivotCurrencyId");
                OnPivotCurrencyIdChanged();
            }
        }
        private global::System.String _PivotCurrencyId;
        partial void OnPivotCurrencyIdChanging(global::System.String value);
        partial void OnPivotCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GlobalPivotCurrencyId
        {
            get
            {
                return _GlobalPivotCurrencyId;
            }
            set
            {
                OnGlobalPivotCurrencyIdChanging(value);
                ReportPropertyChanging("GlobalPivotCurrencyId");
                _GlobalPivotCurrencyId = value;
                ReportPropertyChanged("GlobalPivotCurrencyId");
                OnGlobalPivotCurrencyIdChanged();
            }
        }
        private global::System.String _GlobalPivotCurrencyId;
        partial void OnGlobalPivotCurrencyIdChanging(global::System.String value);
        partial void OnGlobalPivotCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Contracts_Instances_InstanceId", "Contracts")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("LightSwitchApplication.FK_Contracts_Instances_InstanceId", "Contracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("LightSwitchApplication.FK_Contracts_Instances_InstanceId", "Contracts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="subCategory">Initial value of the SubCategory property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="unit">Initial value of the Unit property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="imageUrl">Initial value of the ImageUrl property.</param>
        /// <param name="rating">Initial value of the Rating property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static Item CreateItem(global::System.Int32 id, global::System.String category, global::System.String subCategory, global::System.String name, global::System.String unit, global::System.String description, global::System.String imageUrl, global::System.Int32 rating, global::System.Byte[] rowVersion)
        {
            Item item = new Item();
            item.Id = id;
            item.Category = category;
            item.SubCategory = subCategory;
            item.Name = name;
            item.Unit = unit;
            item.Description = description;
            item.ImageUrl = imageUrl;
            item.Rating = rating;
            item.RowVersion = rowVersion;
            return item;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = value;
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubCategory
        {
            get
            {
                return _SubCategory;
            }
            set
            {
                OnSubCategoryChanging(value);
                ReportPropertyChanging("SubCategory");
                _SubCategory = value;
                ReportPropertyChanged("SubCategory");
                OnSubCategoryChanged();
            }
        }
        private global::System.String _SubCategory;
        partial void OnSubCategoryChanging(global::System.String value);
        partial void OnSubCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = value;
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = value;
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = value;
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private global::System.Int32 _Rating;
        partial void OnRatingChanging(global::System.Int32 value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderLineItems_Items_ItemId", "OrderLineItems")]
        public EntityCollection<OrderLineItem> OrderLineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderLineItem>("LightSwitchApplication.FK_OrderLineItems_Items_ItemId", "OrderLineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderLineItem>("LightSwitchApplication.FK_OrderLineItems_Items_ItemId", "OrderLineItems", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="orderDate">Initial value of the OrderDate property.</param>
        /// <param name="quotationDate">Initial value of the QuotationDate property.</param>
        /// <param name="isQuoted">Initial value of the IsQuoted property.</param>
        /// <param name="approvalDate">Initial value of the ApprovalDate property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="fulfilmentDate">Initial value of the FulfilmentDate property.</param>
        /// <param name="isFulfilled">Initial value of the IsFulfilled property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="pivotExchangeRate">Initial value of the PivotExchangeRate property.</param>
        /// <param name="globalPivotExchangeRate">Initial value of the GlobalPivotExchangeRate property.</param>
        /// <param name="adminFee">Initial value of the AdminFee property.</param>
        /// <param name="estimatedTakeoffTime">Initial value of the EstimatedTakeoffTime property.</param>
        /// <param name="estimatedLandingTime">Initial value of the EstimatedLandingTime property.</param>
        /// <param name="contractId">Initial value of the ContractId property.</param>
        /// <param name="buyerId">Initial value of the BuyerId property.</param>
        /// <param name="sellerId">Initial value of the SellerId property.</param>
        public static Order CreateOrder(global::System.Int32 id, global::System.DateTime orderDate, global::System.DateTime quotationDate, global::System.Boolean isQuoted, global::System.DateTime approvalDate, global::System.Boolean isApproved, global::System.DateTime fulfilmentDate, global::System.Boolean isFulfilled, global::System.Int32 status, global::System.Double amount, global::System.Double pivotExchangeRate, global::System.Double globalPivotExchangeRate, global::System.Double adminFee, global::System.DateTime estimatedTakeoffTime, global::System.DateTime estimatedLandingTime, global::System.Int32 contractId, global::System.Int32 buyerId, global::System.Int32 sellerId)
        {
            Order order = new Order();
            order.Id = id;
            order.OrderDate = orderDate;
            order.QuotationDate = quotationDate;
            order.IsQuoted = isQuoted;
            order.ApprovalDate = approvalDate;
            order.IsApproved = isApproved;
            order.FulfilmentDate = fulfilmentDate;
            order.IsFulfilled = isFulfilled;
            order.Status = status;
            order.Amount = amount;
            order.PivotExchangeRate = pivotExchangeRate;
            order.GlobalPivotExchangeRate = globalPivotExchangeRate;
            order.AdminFee = adminFee;
            order.EstimatedTakeoffTime = estimatedTakeoffTime;
            order.EstimatedLandingTime = estimatedLandingTime;
            order.ContractId = contractId;
            order.BuyerId = buyerId;
            order.SellerId = sellerId;
            return order;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = value;
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private global::System.DateTime _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTime value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime QuotationDate
        {
            get
            {
                return _QuotationDate;
            }
            set
            {
                OnQuotationDateChanging(value);
                ReportPropertyChanging("QuotationDate");
                _QuotationDate = value;
                ReportPropertyChanged("QuotationDate");
                OnQuotationDateChanged();
            }
        }
        private global::System.DateTime _QuotationDate;
        partial void OnQuotationDateChanging(global::System.DateTime value);
        partial void OnQuotationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsQuoted
        {
            get
            {
                return _IsQuoted;
            }
            set
            {
                OnIsQuotedChanging(value);
                ReportPropertyChanging("IsQuoted");
                _IsQuoted = value;
                ReportPropertyChanged("IsQuoted");
                OnIsQuotedChanged();
            }
        }
        private global::System.Boolean _IsQuoted;
        partial void OnIsQuotedChanging(global::System.Boolean value);
        partial void OnIsQuotedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ApprovalDate
        {
            get
            {
                return _ApprovalDate;
            }
            set
            {
                OnApprovalDateChanging(value);
                ReportPropertyChanging("ApprovalDate");
                _ApprovalDate = value;
                ReportPropertyChanged("ApprovalDate");
                OnApprovalDateChanged();
            }
        }
        private global::System.DateTime _ApprovalDate;
        partial void OnApprovalDateChanging(global::System.DateTime value);
        partial void OnApprovalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = value;
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FulfilmentDate
        {
            get
            {
                return _FulfilmentDate;
            }
            set
            {
                OnFulfilmentDateChanging(value);
                ReportPropertyChanging("FulfilmentDate");
                _FulfilmentDate = value;
                ReportPropertyChanged("FulfilmentDate");
                OnFulfilmentDateChanged();
            }
        }
        private global::System.DateTime _FulfilmentDate;
        partial void OnFulfilmentDateChanging(global::System.DateTime value);
        partial void OnFulfilmentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFulfilled
        {
            get
            {
                return _IsFulfilled;
            }
            set
            {
                OnIsFulfilledChanging(value);
                ReportPropertyChanging("IsFulfilled");
                _IsFulfilled = value;
                ReportPropertyChanged("IsFulfilled");
                OnIsFulfilledChanged();
            }
        }
        private global::System.Boolean _IsFulfilled;
        partial void OnIsFulfilledChanging(global::System.Boolean value);
        partial void OnIsFulfilledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = value;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = value;
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PivotExchangeRate
        {
            get
            {
                return _PivotExchangeRate;
            }
            set
            {
                OnPivotExchangeRateChanging(value);
                ReportPropertyChanging("PivotExchangeRate");
                _PivotExchangeRate = value;
                ReportPropertyChanged("PivotExchangeRate");
                OnPivotExchangeRateChanged();
            }
        }
        private global::System.Double _PivotExchangeRate;
        partial void OnPivotExchangeRateChanging(global::System.Double value);
        partial void OnPivotExchangeRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double GlobalPivotExchangeRate
        {
            get
            {
                return _GlobalPivotExchangeRate;
            }
            set
            {
                OnGlobalPivotExchangeRateChanging(value);
                ReportPropertyChanging("GlobalPivotExchangeRate");
                _GlobalPivotExchangeRate = value;
                ReportPropertyChanged("GlobalPivotExchangeRate");
                OnGlobalPivotExchangeRateChanged();
            }
        }
        private global::System.Double _GlobalPivotExchangeRate;
        partial void OnGlobalPivotExchangeRateChanging(global::System.Double value);
        partial void OnGlobalPivotExchangeRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AdminFee
        {
            get
            {
                return _AdminFee;
            }
            set
            {
                OnAdminFeeChanging(value);
                ReportPropertyChanging("AdminFee");
                _AdminFee = value;
                ReportPropertyChanged("AdminFee");
                OnAdminFeeChanged();
            }
        }
        private global::System.Double _AdminFee;
        partial void OnAdminFeeChanging(global::System.Double value);
        partial void OnAdminFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerCardHolderName
        {
            get
            {
                return _BuyerCardHolderName;
            }
            set
            {
                OnBuyerCardHolderNameChanging(value);
                ReportPropertyChanging("BuyerCardHolderName");
                _BuyerCardHolderName = value;
                ReportPropertyChanged("BuyerCardHolderName");
                OnBuyerCardHolderNameChanged();
            }
        }
        private global::System.String _BuyerCardHolderName;
        partial void OnBuyerCardHolderNameChanging(global::System.String value);
        partial void OnBuyerCardHolderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerCardNumber
        {
            get
            {
                return _BuyerCardNumber;
            }
            set
            {
                OnBuyerCardNumberChanging(value);
                ReportPropertyChanging("BuyerCardNumber");
                _BuyerCardNumber = value;
                ReportPropertyChanged("BuyerCardNumber");
                OnBuyerCardNumberChanged();
            }
        }
        private global::System.String _BuyerCardNumber;
        partial void OnBuyerCardNumberChanging(global::System.String value);
        partial void OnBuyerCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerCardExpDate
        {
            get
            {
                return _BuyerCardExpDate;
            }
            set
            {
                OnBuyerCardExpDateChanging(value);
                ReportPropertyChanging("BuyerCardExpDate");
                _BuyerCardExpDate = value;
                ReportPropertyChanged("BuyerCardExpDate");
                OnBuyerCardExpDateChanged();
            }
        }
        private global::System.String _BuyerCardExpDate;
        partial void OnBuyerCardExpDateChanging(global::System.String value);
        partial void OnBuyerCardExpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerCardSecurityCode
        {
            get
            {
                return _BuyerCardSecurityCode;
            }
            set
            {
                OnBuyerCardSecurityCodeChanging(value);
                ReportPropertyChanging("BuyerCardSecurityCode");
                _BuyerCardSecurityCode = value;
                ReportPropertyChanged("BuyerCardSecurityCode");
                OnBuyerCardSecurityCodeChanged();
            }
        }
        private global::System.String _BuyerCardSecurityCode;
        partial void OnBuyerCardSecurityCodeChanging(global::System.String value);
        partial void OnBuyerCardSecurityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerPaypalUserId
        {
            get
            {
                return _BuyerPaypalUserId;
            }
            set
            {
                OnBuyerPaypalUserIdChanging(value);
                ReportPropertyChanging("BuyerPaypalUserId");
                _BuyerPaypalUserId = value;
                ReportPropertyChanged("BuyerPaypalUserId");
                OnBuyerPaypalUserIdChanged();
            }
        }
        private global::System.String _BuyerPaypalUserId;
        partial void OnBuyerPaypalUserIdChanging(global::System.String value);
        partial void OnBuyerPaypalUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerPaypalPassword
        {
            get
            {
                return _BuyerPaypalPassword;
            }
            set
            {
                OnBuyerPaypalPasswordChanging(value);
                ReportPropertyChanging("BuyerPaypalPassword");
                _BuyerPaypalPassword = value;
                ReportPropertyChanged("BuyerPaypalPassword");
                OnBuyerPaypalPasswordChanged();
            }
        }
        private global::System.String _BuyerPaypalPassword;
        partial void OnBuyerPaypalPasswordChanging(global::System.String value);
        partial void OnBuyerPaypalPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerReferenceNumber
        {
            get
            {
                return _BuyerReferenceNumber;
            }
            set
            {
                OnBuyerReferenceNumberChanging(value);
                ReportPropertyChanging("BuyerReferenceNumber");
                _BuyerReferenceNumber = value;
                ReportPropertyChanged("BuyerReferenceNumber");
                OnBuyerReferenceNumberChanged();
            }
        }
        private global::System.String _BuyerReferenceNumber;
        partial void OnBuyerReferenceNumberChanging(global::System.String value);
        partial void OnBuyerReferenceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SellerCardHolderName
        {
            get
            {
                return _SellerCardHolderName;
            }
            set
            {
                OnSellerCardHolderNameChanging(value);
                ReportPropertyChanging("SellerCardHolderName");
                _SellerCardHolderName = value;
                ReportPropertyChanged("SellerCardHolderName");
                OnSellerCardHolderNameChanged();
            }
        }
        private global::System.String _SellerCardHolderName;
        partial void OnSellerCardHolderNameChanging(global::System.String value);
        partial void OnSellerCardHolderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SellerCardNumber
        {
            get
            {
                return _SellerCardNumber;
            }
            set
            {
                OnSellerCardNumberChanging(value);
                ReportPropertyChanging("SellerCardNumber");
                _SellerCardNumber = value;
                ReportPropertyChanged("SellerCardNumber");
                OnSellerCardNumberChanged();
            }
        }
        private global::System.String _SellerCardNumber;
        partial void OnSellerCardNumberChanging(global::System.String value);
        partial void OnSellerCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SellerCardExpDate
        {
            get
            {
                return _SellerCardExpDate;
            }
            set
            {
                OnSellerCardExpDateChanging(value);
                ReportPropertyChanging("SellerCardExpDate");
                _SellerCardExpDate = value;
                ReportPropertyChanged("SellerCardExpDate");
                OnSellerCardExpDateChanged();
            }
        }
        private global::System.String _SellerCardExpDate;
        partial void OnSellerCardExpDateChanging(global::System.String value);
        partial void OnSellerCardExpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SellerCardSecurityCode
        {
            get
            {
                return _SellerCardSecurityCode;
            }
            set
            {
                OnSellerCardSecurityCodeChanging(value);
                ReportPropertyChanging("SellerCardSecurityCode");
                _SellerCardSecurityCode = value;
                ReportPropertyChanged("SellerCardSecurityCode");
                OnSellerCardSecurityCodeChanged();
            }
        }
        private global::System.String _SellerCardSecurityCode;
        partial void OnSellerCardSecurityCodeChanging(global::System.String value);
        partial void OnSellerCardSecurityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SellerPaypalUserId
        {
            get
            {
                return _SellerPaypalUserId;
            }
            set
            {
                OnSellerPaypalUserIdChanging(value);
                ReportPropertyChanging("SellerPaypalUserId");
                _SellerPaypalUserId = value;
                ReportPropertyChanged("SellerPaypalUserId");
                OnSellerPaypalUserIdChanged();
            }
        }
        private global::System.String _SellerPaypalUserId;
        partial void OnSellerPaypalUserIdChanging(global::System.String value);
        partial void OnSellerPaypalUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SellerPaypalPassword
        {
            get
            {
                return _SellerPaypalPassword;
            }
            set
            {
                OnSellerPaypalPasswordChanging(value);
                ReportPropertyChanging("SellerPaypalPassword");
                _SellerPaypalPassword = value;
                ReportPropertyChanged("SellerPaypalPassword");
                OnSellerPaypalPasswordChanged();
            }
        }
        private global::System.String _SellerPaypalPassword;
        partial void OnSellerPaypalPasswordChanging(global::System.String value);
        partial void OnSellerPaypalPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SellerReferenceNumber
        {
            get
            {
                return _SellerReferenceNumber;
            }
            set
            {
                OnSellerReferenceNumberChanging(value);
                ReportPropertyChanging("SellerReferenceNumber");
                _SellerReferenceNumber = value;
                ReportPropertyChanged("SellerReferenceNumber");
                OnSellerReferenceNumberChanged();
            }
        }
        private global::System.String _SellerReferenceNumber;
        partial void OnSellerReferenceNumberChanging(global::System.String value);
        partial void OnSellerReferenceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Operateur
        {
            get
            {
                return _Operateur;
            }
            set
            {
                OnOperateurChanging(value);
                ReportPropertyChanging("Operateur");
                _Operateur = value;
                ReportPropertyChanged("Operateur");
                OnOperateurChanged();
            }
        }
        private global::System.String _Operateur;
        partial void OnOperateurChanging(global::System.String value);
        partial void OnOperateurChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FlightNumber
        {
            get
            {
                return _FlightNumber;
            }
            set
            {
                OnFlightNumberChanging(value);
                ReportPropertyChanging("FlightNumber");
                _FlightNumber = value;
                ReportPropertyChanged("FlightNumber");
                OnFlightNumberChanged();
            }
        }
        private global::System.String _FlightNumber;
        partial void OnFlightNumberChanging(global::System.String value);
        partial void OnFlightNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EstimatedTakeoffTime
        {
            get
            {
                return _EstimatedTakeoffTime;
            }
            set
            {
                OnEstimatedTakeoffTimeChanging(value);
                ReportPropertyChanging("EstimatedTakeoffTime");
                _EstimatedTakeoffTime = value;
                ReportPropertyChanged("EstimatedTakeoffTime");
                OnEstimatedTakeoffTimeChanged();
            }
        }
        private global::System.DateTime _EstimatedTakeoffTime;
        partial void OnEstimatedTakeoffTimeChanging(global::System.DateTime value);
        partial void OnEstimatedTakeoffTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EstimatedLandingTime
        {
            get
            {
                return _EstimatedLandingTime;
            }
            set
            {
                OnEstimatedLandingTimeChanging(value);
                ReportPropertyChanging("EstimatedLandingTime");
                _EstimatedLandingTime = value;
                ReportPropertyChanged("EstimatedLandingTime");
                OnEstimatedLandingTimeChanged();
            }
        }
        private global::System.DateTime _EstimatedLandingTime;
        partial void OnEstimatedLandingTimeChanging(global::System.DateTime value);
        partial void OnEstimatedLandingTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AircraftId
        {
            get
            {
                return _AircraftId;
            }
            set
            {
                OnAircraftIdChanging(value);
                ReportPropertyChanging("AircraftId");
                _AircraftId = value;
                ReportPropertyChanged("AircraftId");
                OnAircraftIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AircraftId;
        partial void OnAircraftIdChanging(Nullable<global::System.Int32> value);
        partial void OnAircraftIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LandingAirportId
        {
            get
            {
                return _LandingAirportId;
            }
            set
            {
                OnLandingAirportIdChanging(value);
                ReportPropertyChanging("LandingAirportId");
                _LandingAirportId = value;
                ReportPropertyChanged("LandingAirportId");
                OnLandingAirportIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LandingAirportId;
        partial void OnLandingAirportIdChanging(Nullable<global::System.Int32> value);
        partial void OnLandingAirportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TakeoffAirportId
        {
            get
            {
                return _TakeoffAirportId;
            }
            set
            {
                OnTakeoffAirportIdChanging(value);
                ReportPropertyChanging("TakeoffAirportId");
                _TakeoffAirportId = value;
                ReportPropertyChanged("TakeoffAirportId");
                OnTakeoffAirportIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TakeoffAirportId;
        partial void OnTakeoffAirportIdChanging(Nullable<global::System.Int32> value);
        partial void OnTakeoffAirportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractId
        {
            get
            {
                return _ContractId;
            }
            set
            {
                OnContractIdChanging(value);
                ReportPropertyChanging("ContractId");
                _ContractId = value;
                ReportPropertyChanged("ContractId");
                OnContractIdChanged();
            }
        }
        private global::System.Int32 _ContractId;
        partial void OnContractIdChanging(global::System.Int32 value);
        partial void OnContractIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuyerId
        {
            get
            {
                return _BuyerId;
            }
            set
            {
                OnBuyerIdChanging(value);
                ReportPropertyChanging("BuyerId");
                _BuyerId = value;
                ReportPropertyChanged("BuyerId");
                OnBuyerIdChanged();
            }
        }
        private global::System.Int32 _BuyerId;
        partial void OnBuyerIdChanging(global::System.Int32 value);
        partial void OnBuyerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SellerId
        {
            get
            {
                return _SellerId;
            }
            set
            {
                OnSellerIdChanging(value);
                ReportPropertyChanging("SellerId");
                _SellerId = value;
                ReportPropertyChanged("SellerId");
                OnSellerIdChanged();
            }
        }
        private global::System.Int32 _SellerId;
        partial void OnSellerIdChanging(global::System.Int32 value);
        partial void OnSellerIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderLineItems_Orders_OrderId", "OrderLineItems")]
        public EntityCollection<OrderLineItem> OrderLineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderLineItem>("LightSwitchApplication.FK_OrderLineItems_Orders_OrderId", "OrderLineItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderLineItem>("LightSwitchApplication.FK_OrderLineItems_Orders_OrderId", "OrderLineItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Orders_Aircraft_AircraftId", "Aircraft")]
        public Aircraft Aircraft
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aircraft>("LightSwitchApplication.FK_Orders_Aircraft_AircraftId", "Aircraft").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aircraft>("LightSwitchApplication.FK_Orders_Aircraft_AircraftId", "Aircraft").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Aircraft> AircraftReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aircraft>("LightSwitchApplication.FK_Orders_Aircraft_AircraftId", "Aircraft");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Aircraft>("LightSwitchApplication.FK_Orders_Aircraft_AircraftId", "Aircraft", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Orders_Airports_LandingAirportId", "Airports")]
        public Airport LandingAirport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Airport>("LightSwitchApplication.FK_Orders_Airports_LandingAirportId", "Airports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Airport>("LightSwitchApplication.FK_Orders_Airports_LandingAirportId", "Airports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Airport> LandingAirportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Airport>("LightSwitchApplication.FK_Orders_Airports_LandingAirportId", "Airports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Airport>("LightSwitchApplication.FK_Orders_Airports_LandingAirportId", "Airports", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Orders_Airports_TakeoffAirportId", "Airports")]
        public Airport TakeoffAirport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Airport>("LightSwitchApplication.FK_Orders_Airports_TakeoffAirportId", "Airports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Airport>("LightSwitchApplication.FK_Orders_Airports_TakeoffAirportId", "Airports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Airport> TakeoffAirportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Airport>("LightSwitchApplication.FK_Orders_Airports_TakeoffAirportId", "Airports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Airport>("LightSwitchApplication.FK_Orders_Airports_TakeoffAirportId", "Airports", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Orders_Contracts_ContractId", "Contracts")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("LightSwitchApplication.FK_Orders_Contracts_ContractId", "Contracts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("LightSwitchApplication.FK_Orders_Contracts_ContractId", "Contracts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("LightSwitchApplication.FK_Orders_Contracts_ContractId", "Contracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("LightSwitchApplication.FK_Orders_Contracts_ContractId", "Contracts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Orders_Traders_BuyerId", "Traders")]
        public Trader Buyer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_Orders_Traders_BuyerId", "Traders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_Orders_Traders_BuyerId", "Traders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trader> BuyerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_Orders_Traders_BuyerId", "Traders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trader>("LightSwitchApplication.FK_Orders_Traders_BuyerId", "Traders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Orders_Traders_SellerId", "Traders")]
        public Trader Seller
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_Orders_Traders_SellerId", "Traders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_Orders_Traders_SellerId", "Traders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trader> SellerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_Orders_Traders_SellerId", "Traders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trader>("LightSwitchApplication.FK_Orders_Traders_SellerId", "Traders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="OrderLineItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderLineItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderLineItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fulfilmentDate">Initial value of the FulfilmentDate property.</param>
        /// <param name="units">Initial value of the Units property.</param>
        /// <param name="pricePerUnit">Initial value of the PricePerUnit property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="adminFee">Initial value of the AdminFee property.</param>
        /// <param name="pivotExchangeRate">Initial value of the PivotExchangeRate property.</param>
        /// <param name="globalPivotExchangeRate">Initial value of the GlobalPivotExchangeRate property.</param>
        /// <param name="currencyId">Initial value of the CurrencyId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="orderId">Initial value of the OrderId property.</param>
        public static OrderLineItem CreateOrderLineItem(global::System.Int32 id, global::System.DateTime fulfilmentDate, global::System.Int32 units, global::System.Double pricePerUnit, global::System.Double amount, global::System.Double adminFee, global::System.Double pivotExchangeRate, global::System.Double globalPivotExchangeRate, global::System.String currencyId, global::System.Int32 itemId, global::System.Int32 orderId)
        {
            OrderLineItem orderLineItem = new OrderLineItem();
            orderLineItem.Id = id;
            orderLineItem.FulfilmentDate = fulfilmentDate;
            orderLineItem.Units = units;
            orderLineItem.PricePerUnit = pricePerUnit;
            orderLineItem.Amount = amount;
            orderLineItem.AdminFee = adminFee;
            orderLineItem.PivotExchangeRate = pivotExchangeRate;
            orderLineItem.GlobalPivotExchangeRate = globalPivotExchangeRate;
            orderLineItem.CurrencyId = currencyId;
            orderLineItem.ItemId = itemId;
            orderLineItem.OrderId = orderId;
            return orderLineItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FulfilmentDate
        {
            get
            {
                return _FulfilmentDate;
            }
            set
            {
                OnFulfilmentDateChanging(value);
                ReportPropertyChanging("FulfilmentDate");
                _FulfilmentDate = value;
                ReportPropertyChanged("FulfilmentDate");
                OnFulfilmentDateChanged();
            }
        }
        private global::System.DateTime _FulfilmentDate;
        partial void OnFulfilmentDateChanging(global::System.DateTime value);
        partial void OnFulfilmentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Units
        {
            get
            {
                return _Units;
            }
            set
            {
                OnUnitsChanging(value);
                ReportPropertyChanging("Units");
                _Units = value;
                ReportPropertyChanged("Units");
                OnUnitsChanged();
            }
        }
        private global::System.Int32 _Units;
        partial void OnUnitsChanging(global::System.Int32 value);
        partial void OnUnitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PricePerUnit
        {
            get
            {
                return _PricePerUnit;
            }
            set
            {
                OnPricePerUnitChanging(value);
                ReportPropertyChanging("PricePerUnit");
                _PricePerUnit = value;
                ReportPropertyChanged("PricePerUnit");
                OnPricePerUnitChanged();
            }
        }
        private global::System.Double _PricePerUnit;
        partial void OnPricePerUnitChanging(global::System.Double value);
        partial void OnPricePerUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = value;
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AdminFee
        {
            get
            {
                return _AdminFee;
            }
            set
            {
                OnAdminFeeChanging(value);
                ReportPropertyChanging("AdminFee");
                _AdminFee = value;
                ReportPropertyChanged("AdminFee");
                OnAdminFeeChanged();
            }
        }
        private global::System.Double _AdminFee;
        partial void OnAdminFeeChanging(global::System.Double value);
        partial void OnAdminFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PivotExchangeRate
        {
            get
            {
                return _PivotExchangeRate;
            }
            set
            {
                OnPivotExchangeRateChanging(value);
                ReportPropertyChanging("PivotExchangeRate");
                _PivotExchangeRate = value;
                ReportPropertyChanged("PivotExchangeRate");
                OnPivotExchangeRateChanged();
            }
        }
        private global::System.Double _PivotExchangeRate;
        partial void OnPivotExchangeRateChanging(global::System.Double value);
        partial void OnPivotExchangeRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double GlobalPivotExchangeRate
        {
            get
            {
                return _GlobalPivotExchangeRate;
            }
            set
            {
                OnGlobalPivotExchangeRateChanging(value);
                ReportPropertyChanging("GlobalPivotExchangeRate");
                _GlobalPivotExchangeRate = value;
                ReportPropertyChanged("GlobalPivotExchangeRate");
                OnGlobalPivotExchangeRateChanged();
            }
        }
        private global::System.Double _GlobalPivotExchangeRate;
        partial void OnGlobalPivotExchangeRateChanging(global::System.Double value);
        partial void OnGlobalPivotExchangeRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                OnCurrencyIdChanging(value);
                ReportPropertyChanging("CurrencyId");
                _CurrencyId = value;
                ReportPropertyChanged("CurrencyId");
                OnCurrencyIdChanged();
            }
        }
        private global::System.String _CurrencyId;
        partial void OnCurrencyIdChanging(global::System.String value);
        partial void OnCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = value;
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                OnOrderIdChanging(value);
                ReportPropertyChanging("OrderId");
                _OrderId = value;
                ReportPropertyChanged("OrderId");
                OnOrderIdChanged();
            }
        }
        private global::System.Int32 _OrderId;
        partial void OnOrderIdChanging(global::System.Int32 value);
        partial void OnOrderIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderLineItems_Items_ItemId", "Items")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("LightSwitchApplication.FK_OrderLineItems_Items_ItemId", "Items").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("LightSwitchApplication.FK_OrderLineItems_Items_ItemId", "Items").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("LightSwitchApplication.FK_OrderLineItems_Items_ItemId", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("LightSwitchApplication.FK_OrderLineItems_Items_ItemId", "Items", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderLineItems_Orders_OrderId", "Orders")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_OrderLineItems_Orders_OrderId", "Orders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_OrderLineItems_Orders_OrderId", "Orders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_OrderLineItems_Orders_OrderId", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_OrderLineItems_Orders_OrderId", "Orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Trader")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Trader : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Trader object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="currentInvoiceCounter">Initial value of the CurrentInvoiceCounter property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static Trader CreateTrader(global::System.Int32 id, global::System.Int32 currentInvoiceCounter, global::System.String countryId, global::System.Byte[] rowVersion)
        {
            Trader trader = new Trader();
            trader.Id = id;
            trader.CurrentInvoiceCounter = currentInvoiceCounter;
            trader.CountryId = countryId;
            trader.RowVersion = rowVersion;
            return trader;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = value;
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = value;
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = value;
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = value;
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = value;
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = value;
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Contact
        {
            get
            {
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = value;
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private global::System.String _Contact;
        partial void OnContactChanging(global::System.String value);
        partial void OnContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = value;
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrentInvoiceCounter
        {
            get
            {
                return _CurrentInvoiceCounter;
            }
            set
            {
                OnCurrentInvoiceCounterChanging(value);
                ReportPropertyChanging("CurrentInvoiceCounter");
                _CurrentInvoiceCounter = value;
                ReportPropertyChanged("CurrentInvoiceCounter");
                OnCurrentInvoiceCounterChanged();
            }
        }
        private global::System.Int32 _CurrentInvoiceCounter;
        partial void OnCurrentInvoiceCounterChanging(global::System.Int32 value);
        partial void OnCurrentInvoiceCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = value;
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.String _CountryId;
        partial void OnCountryIdChanging(global::System.String value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Contracts_Traders_TraderOneId", "Contracts")]
        public EntityCollection<Contract> TraderOneContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("LightSwitchApplication.FK_Contracts_Traders_TraderOneId", "Contracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("LightSwitchApplication.FK_Contracts_Traders_TraderOneId", "Contracts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Contracts_Traders_TraderTwoId", "Contracts")]
        public EntityCollection<Contract> TraderTwoContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("LightSwitchApplication.FK_Contracts_Traders_TraderTwoId", "Contracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("LightSwitchApplication.FK_Contracts_Traders_TraderTwoId", "Contracts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CreditCards_Traders_TraderId", "CreditCards")]
        public EntityCollection<CreditCard> CreditCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CreditCard>("LightSwitchApplication.FK_CreditCards_Traders_TraderId", "CreditCards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CreditCard>("LightSwitchApplication.FK_CreditCards_Traders_TraderId", "CreditCards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Orders_Traders_BuyerId", "Orders")]
        public EntityCollection<Order> BuyerOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("LightSwitchApplication.FK_Orders_Traders_BuyerId", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("LightSwitchApplication.FK_Orders_Traders_BuyerId", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Orders_Traders_SellerId", "Orders")]
        public EntityCollection<Order> TraderOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("LightSwitchApplication.FK_Orders_Traders_SellerId", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("LightSwitchApplication.FK_Orders_Traders_SellerId", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TraderRegistrationTokens_Traders_TraderId", "TraderRegistrationTokens")]
        public EntityCollection<TraderRegistrationToken> TraderRegistrationTokens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TraderRegistrationToken>("LightSwitchApplication.FK_TraderRegistrationTokens_Traders_TraderId", "TraderRegistrationTokens");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TraderRegistrationToken>("LightSwitchApplication.FK_TraderRegistrationTokens_Traders_TraderId", "TraderRegistrationTokens", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="TraderRegistrationToken")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TraderRegistrationToken : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TraderRegistrationToken object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="traderId">Initial value of the TraderId property.</param>
        public static TraderRegistrationToken CreateTraderRegistrationToken(global::System.Int32 id, global::System.DateTime createDate, global::System.Int32 traderId)
        {
            TraderRegistrationToken traderRegistrationToken = new TraderRegistrationToken();
            traderRegistrationToken.Id = id;
            traderRegistrationToken.CreateDate = createDate;
            traderRegistrationToken.TraderId = traderId;
            return traderRegistrationToken;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = value;
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Token
        {
            get
            {
                return _Token;
            }
            set
            {
                OnTokenChanging(value);
                ReportPropertyChanging("Token");
                _Token = value;
                ReportPropertyChanged("Token");
                OnTokenChanged();
            }
        }
        private global::System.String _Token;
        partial void OnTokenChanging(global::System.String value);
        partial void OnTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TraderId
        {
            get
            {
                return _TraderId;
            }
            set
            {
                OnTraderIdChanging(value);
                ReportPropertyChanging("TraderId");
                _TraderId = value;
                ReportPropertyChanged("TraderId");
                OnTraderIdChanged();
            }
        }
        private global::System.Int32 _TraderId;
        partial void OnTraderIdChanging(global::System.Int32 value);
        partial void OnTraderIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_TraderRegistrationTokens_Traders_TraderId", "Traders")]
        public Trader Trader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_TraderRegistrationTokens_Traders_TraderId", "Traders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_TraderRegistrationTokens_Traders_TraderId", "Traders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trader> TraderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trader>("LightSwitchApplication.FK_TraderRegistrationTokens_Traders_TraderId", "Traders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trader>("LightSwitchApplication.FK_TraderRegistrationTokens_Traders_TraderId", "Traders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String name, global::System.String login, global::System.String password, global::System.String email, global::System.String groupId)
        {
            User user = new User();
            user.Id = id;
            user.Name = name;
            user.Login = login;
            user.Password = password;
            user.Email = email;
            user.GroupId = groupId;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = value;
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = value;
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = value;
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoUrl
        {
            get
            {
                return _PhotoUrl;
            }
            set
            {
                OnPhotoUrlChanging(value);
                ReportPropertyChanging("PhotoUrl");
                _PhotoUrl = value;
                ReportPropertyChanged("PhotoUrl");
                OnPhotoUrlChanged();
            }
        }
        private global::System.String _PhotoUrl;
        partial void OnPhotoUrlChanging(global::System.String value);
        partial void OnPhotoUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = value;
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.String _GroupId;
        partial void OnGroupIdChanging(global::System.String value);
        partial void OnGroupIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Users_Groups_GroupId", "Groups")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("LightSwitchApplication.FK_Users_Groups_GroupId", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("LightSwitchApplication.FK_Users_Groups_GroupId", "Groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("LightSwitchApplication.FK_Users_Groups_GroupId", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("LightSwitchApplication.FK_Users_Groups_GroupId", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_UserConfigurationItems_Users_UserId", "UserConfigurationItems")]
        public EntityCollection<UserConfigurationItem> UserConfigurationItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserConfigurationItem>("LightSwitchApplication.FK_UserConfigurationItems_Users_UserId", "UserConfigurationItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserConfigurationItem>("LightSwitchApplication.FK_UserConfigurationItems_Users_UserId", "UserConfigurationItems", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="UserConfigurationItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserConfigurationItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserConfigurationItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserConfigurationItem CreateUserConfigurationItem(global::System.Int32 id, global::System.Int32 userId)
        {
            UserConfigurationItem userConfigurationItem = new UserConfigurationItem();
            userConfigurationItem.Id = id;
            userConfigurationItem.UserId = userId;
            return userConfigurationItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = value;
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = value;
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = value;
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_UserConfigurationItems_Users_UserId", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LightSwitchApplication.FK_UserConfigurationItems_Users_UserId", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LightSwitchApplication.FK_UserConfigurationItems_Users_UserId", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LightSwitchApplication.FK_UserConfigurationItems_Users_UserId", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LightSwitchApplication.FK_UserConfigurationItems_Users_UserId", "Users", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
